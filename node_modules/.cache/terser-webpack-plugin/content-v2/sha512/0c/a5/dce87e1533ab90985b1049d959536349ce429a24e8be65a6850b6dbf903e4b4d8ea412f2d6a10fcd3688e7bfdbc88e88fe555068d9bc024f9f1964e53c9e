{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{424:function(t,s,a){\"use strict\";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"jvm体系架构概述\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#jvm体系架构概述\"}},[t._v(\"#\")]),t._v(\" JVM体系架构概述\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"JVM内存结构\\n\"),a(\"img\",{attrs:{src:t.$withBase(\"/jvm/jvm.png\"),alt:\"dock\"}})])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"类加载器-classloader\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#类加载器-classloader\"}},[t._v(\"#\")]),t._v(\" 类加载器 ClassLoader\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"负责加载class文件，class文件在\"),a(\"strong\",[t._v(\"文件开头有特定的文件标示\")]),t._v(\"，将class文件字节码内容加载到内存中，并将这些内容换成方法区中的运行时数据结构并且ClassLoader只负责class文件加载，至于是否可运行，则由执行引擎Execution Engine决定。\")]),t._v(\" \"),a(\"li\",[t._v(\"JVM中提供了三层的ClassLoader：\\n\"),a(\"ul\",[a(\"li\",[t._v(\"Bootstrap classLoader 启动类加载器:主要负责加载核心的类库(java.lang.*等)，构造ExtClassLoader和APPClassLoader\")]),t._v(\" \"),a(\"li\",[t._v(\"ExtClassLoader扩展类加载器：主要负责加载jre/lib/ext目录下的一些扩展的jar。\")]),t._v(\" \"),a(\"li\",[t._v(\"AppClassLoader应用程序类加载器：主要负责加载应用程序的主函数类\")])])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"双亲委派机制\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#双亲委派机制\"}},[t._v(\"#\")]),t._v(\" 双亲委派机制\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"双亲委派模型的工作作过程是 ：如果一个类加载器收到了类加载的请求，它首先不会自己去尝试加载这个类，而是把这个请求委派给父类加载器去完成，每一个层次的类加载器都是如此，因此所有的加载请求最终都应该传送到顶层的启动类加载器中，只有当父加载器反馈自己无法完全这个加载请求（它的搜索范围中没有找到所需的类）时，子加载器才会尝试自己去加载。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"这种设计有个好处是，如果有人想替换系统级别的类：String.java，篡改它的实现，在这种机制下这些系统的类已经被Bootstrap classLoader加载过了。所以其他类加载器并没有机会再去加载，从一定程度上防止了危险代码的植入。\")])])]),t._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"TIP\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"假设当一个Hello.class这样的文件要被加载时。不考虑我们自定义类加载器，首先会在AppClassLoader中检查是否加载过，如果有那就无需再加载了。如果没有，那么会拿到父加载器，然后调用父加载器的loadClass方法。父类中同理也会先检查自己是否已经加载过，如果没有再往上。注意这个类似递归的过程，直到到达Bootstrap classLoader之前，都是在检查是否加载过，并不会选择自己去加载。直到BootstrapClassLoader，已经没有父加载器了，这时候开始考虑自己是否能加载了，如果自己无法加载，会下沉到子加载器去加载，一直到最底层，如果没有任何加载器能加载，就会抛出ClassNotFoundException。\")])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"沙箱安全机制\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#沙箱安全机制\"}},[t._v(\"#\")]),t._v(\" 沙箱安全机制\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"字节码校验器（bytecode verifier）：确保Java类文件遵循Java语言规范。这样可以帮助Java程序实现内存保护。但并不是所有的类文件都会经过字节码校验，比如核心类。\")]),t._v(\" \"),a(\"li\",[t._v(\"类装载器（class loader）：其中类装载器在3个方面对Java沙箱起作用\\n\"),a(\"ul\",[a(\"li\",[t._v(\"它防止恶意代码去干涉善意的代码；\")]),t._v(\" \"),a(\"li\",[t._v(\"它守护了被信任的类库边界；\")]),t._v(\" \"),a(\"li\",[t._v(\"它将代码归入保护域，确定了代码可以进行哪些操作。\")])])])]),t._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"TIP\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"比如我定义了一个类名为String所在包为java.lang，因为这个类本来是属于jdk的，如果没有沙箱安全机制的话，这个类将会污染到我所有的String,但是由于沙箱安全机制，所以就委托顶层的bootstrap加载器查找这个类，如果没有的话就委托extsion,extsion没有就到aapclassloader，但是由于String就是jdk的源代码，所以在bootstrap那里就加载到了，先找到先使用，所以就使用bootstrap里面的String,后面的一概不能使用，这就保证了不被恶意代码污染\")])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"本地接口-native-interface\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#本地接口-native-interface\"}},[t._v(\"#\")]),t._v(\" 本地接口 Native Interface\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"本地接口的作用是融合不同的语言为java所用，它的初衷是融合C/C++程序。所以在内存中开辟了一块空间处理标记为native的代码。它的具体做法是本地方法栈（Native Method Stack）中登记native方法，在执行引擎（Execution Engine）执行是加载native libraies\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"程序计数器-pc寄存器-program-counter-register\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#程序计数器-pc寄存器-program-counter-register\"}},[t._v(\"#\")]),t._v(\" 程序计数器（PC寄存器） Program Counter Register\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"每个线程都有一个程序计数器，是线程私有的。就是一个指针指向方法区中的方法字节码（用来存储下一条指令的地址，也就是即将要执行的指令代码）。这是个非常小的内存空间。如果是native方法，这个计数器是空的\")]),t._v(\" \"),a(\"li\",[t._v(\"该程序计数器用于完成分支、循环、跳转、异常处理、线程恢复等基础功能。该内存空间不会发生OOM错误。\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"方法区-method-area\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#方法区-method-area\"}},[t._v(\"#\")]),t._v(\" 方法区 Method Area\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"供各线程共享的运行时内存区域。它存储了\"),a(\"strong\",[t._v(\"每一个类的结构信息\")]),t._v(\"（类的模板信息），例如运行时常量池、字段和方法数据、构造函数和普通方法的字节码内容。\")]),t._v(\" \"),a(\"li\",[t._v(\"方法区是规范，在不同的虚拟机里实现不同，最典型的是永久代(PermGen space) 1.7和元空间(Metaspace)1.8+\")]),t._v(\" \"),a(\"li\",[t._v(\"实例变量在堆内存中，和方法区无关\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"栈-jave-stack\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#栈-jave-stack\"}},[t._v(\"#\")]),t._v(\" 栈 Jave Stack\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"栈也叫栈内存，主管java程序运行，是在线程创建时创建（线程私有），它的生命周期是跟随线程的生命周期。所以\"),a(\"em\",[t._v(\"对于栈来说不存在垃圾回收问题\")]),t._v(\"。\"),a(\"strong\",[t._v(\"8种基本类型变量 + 对象的引用变量 + 实例方法\")]),t._v(\"都是在函数的占内存中分配。\")]),t._v(\" \"),a(\"li\",[t._v(\"栈存储什么\\n\"),a(\"ul\",[a(\"li\",[t._v(\"本地变量：输入参数、输出参数以及方法内变量\")]),t._v(\" \"),a(\"li\",[t._v(\"栈操作：记录入栈、出栈操作\")]),t._v(\" \"),a(\"li\",[t._v(\"栈帧数据：包括类文件、方法等\")])])]),t._v(\" \"),a(\"li\",[t._v(\"StackOverflowError 栈溢出错误\\n\"),a(\"ul\",[a(\"li\",[t._v(\"简单理解就是栈被压爆了（简单操作就是递归且没结束条件），导致溢出\")])])])]),t._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"TIP\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"栈管运行，堆管存储\")]),t._v(\" \"),a(\"li\",[t._v(\"栈和FIFO相反，先进后出\")]),t._v(\" \"),a(\"li\",[t._v(\"栈帧：**每个方法执行时都会创建一个栈帧，有用存储局部变量表、操作数栈、动态链接、方法出口等信息.**每个方法从调用直至执行完毕的过程，就对应着一个栈桢在虚拟机中从入栈到出栈的过程。\"),a(\"strong\",[t._v(\"栈的大小和具体JVM实现有关，通常在256K~756K之间，约等于1M左右。\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"堆-heap\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#堆-heap\"}},[t._v(\"#\")]),t._v(\" 堆 Heap\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"堆内存空间结构\\n\"),a(\"img\",{attrs:{src:t.$withBase(\"/jvm/heap.png\"),alt:\"dock\"}})])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"逻辑上，堆内存分为\"),a(\"code\",[t._v(\"新生、老年、元空间MetaSpace（1.7之前叫永久区Perm Gen）\")]),t._v(\"，在物理上之分为\"),a(\"code\",[t._v(\"新生、老年\")]),t._v(\"两个区。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"新生区是类的诞生、成长、消亡的区域，一个类在这里产生，应用，最后被垃圾回收器回收，结束生命。新区分为两个区，\"),a(\"code\",[t._v(\"伊甸区Eden Space\")]),t._v(\"和\"),a(\"code\",[t._v(\"Survivor Space\")]),t._v(\"。所有类都是在伊甸区Eden Space被new出来的，幸存区有两个0区和1区。当Eden Space空间用完时，程序又要创建新的对象，JVM的垃圾回收器会对Eden Space进行依次Minor GC（会清空Eden区）,将不在被其它对象引用的对象进行销毁，然后再将剩余的对象移放进Survivor 0 Space。若Survivor 0 Space也满了，则再次进行YGC，剩余的存活者放入Survivor 1 Space。若Survivor 1 Space满了，继续YGC放回Survivor 0 Space。达到一定次数后（JVM参数MaxTenuringThreshold设置，默认15），还存活的对象，就会放入老年代。老年代满了以后会进行Full GC(重量级GC)进行内存清理，若老年代FGC还是无法满足对新对象的存储,就会产生OOM异常（OutOfMemoryError）。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"如果出现OOM异常，说明了java虚拟机内存不够，原因有二\\n\"),a(\"ul\",[a(\"li\",[t._v(\"java内存堆空间设置不够，可以通过调整-Xms、-Xmx来调整\")]),t._v(\" \"),a(\"li\",[t._v(\"代码中创建了大量对象，并且长时间不能被垃圾回收机制回收（存在被引用）\")])])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"Survivor 0 Space 也叫from区，Survivor 1 Space叫to区，他俩不是固定的，即from区进行垃圾回收以后，把存活的复制到to区，然后清空from区。这时候他俩交换，这时候空的from区就变成了to区，而有存活对象的to区变成from区。幸存者区一定有一个是空的\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"eden和from、to区比例是 8：1：1，新生与老年区分别是1/3、2/3\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"Minor GC后，有一种情况是from区放不下存活的对象，这时候会部分放入老年代\")])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"永久代-parmanent-gen-jdk7\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#永久代-parmanent-gen-jdk7\"}},[t._v(\"#\")]),t._v(\" 永久代 Parmanent Gen JDK7\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"实际而言，\"),a(\"code\",[t._v(\"方法区Method Area\")]),t._v(\"和\"),a(\"code\",[t._v(\"堆Heap\")]),t._v(\"一样，是各线程共享区域，用于存储虚拟机加载的：类信息+普通常量+静态常量+编译器编译后代码等。\"),a(\"strong\",[t._v(\"虽然JVM规范把它描述成堆的逻辑一部分，但它还有个名字叫Non-heap(非堆)，目的就是跟堆分开。\")])]),t._v(\" \"),a(\"li\",[t._v(\"对于HotSpot虚拟机而言，很多开发者习惯把\"),a(\"code\",[t._v(\"方法区Method Area\")]),t._v(\"描述成\"),a(\"code\",[t._v(\"永久代Parmanent Gen\")]),t._v(\",但严格意义上两者不同，或者说使用永久代来实现方法区而已，永久代是方法区（相当于一个接口interface）的一个实现。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"永久代Parmanent Gen\")]),t._v(\"是一个常驻内存区域，用于存放JDK自身携带的Class,Interface的元数据，也就是说它存储运行环境必须的的类信息，被装进此区域的数据是不会被GC回收的，关闭JVM才会释放此区域占用的内存。\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"栈-、堆-、方法区交互关系\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#栈-、堆-、方法区交互关系\"}},[t._v(\"#\")]),t._v(\" 栈 、堆 、方法区交互关系\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"关系交互图\\n\"),a(\"img\",{attrs:{src:t.$withBase(\"/jvm/relation.png\"),alt:\"dock\"}})])]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getHello\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" name\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" age\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"name \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"说TA\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" age \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"了\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" args\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),t._v(\" p1 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        p1\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getHello\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"w\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"18\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),t._v(\" p2 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        p2\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getHello\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"s\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"24\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[t._v(\"上述代码中，\"),a(\"code\",[t._v(\"Person p1 | Person p2\")]),t._v(\"、\"),a(\"code\",[t._v(\"18 | 24 | w | s\")]),t._v(\"在栈中，属于栈的引用reference,以及本地变量\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"new Person() | new Person()\")]),t._v(\"保存在堆中，开辟内存空间保存对象信息。\")]),t._v(\" \"),a(\"li\",[t._v(\"而new Person() 、new Person()会在方法区开辟\"),a(\"strong\",[t._v(\"一块空间\")]),t._v(\"，保证Person这个类的结构信息\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-java extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[a(\"code\",[t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"package\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token namespace\"}},[t._v(\"com\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"test\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" name\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" name\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"name \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" name\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setName\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" name\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"name \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" name\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getName\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" name\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"TestValue\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getVal1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" age\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        age \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getVal2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),t._v(\" person\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        person\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setName\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"xxx\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getVal3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" s\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        s \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"456\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" args\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"TestValue\")]),t._v(\" value \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"TestValue\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"int\")]),t._v(\" age \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        value\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getVal1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"age\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"age\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),t._v(\" person \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"abc\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        value\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getVal2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"person\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"person\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getName\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" x \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"123\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        value\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getVal3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[t._v(\"第一个打印，age数据保存在栈中的，虽然第一个getVal1方法中，修改了age，里面变的是栈中getVal1方法的变量，而出栈以后 回到main方法，这时候打印的还是mian这个栈里面的age值20\")]),t._v(\" \"),a(\"li\",[t._v(\"第二个打印，是引用类型，getVal2中修改了堆空间中Person这个对象的名字，这时候再打印就是修改过后的xxx\")]),t._v(\" \"),a(\"li\",[t._v(\"第三个打印，String字符串堆中常量池开辟空间创建了空间保存了'123'，getVal3方法，再堆中创建了一个内存空间'456'，指针指向了新的地址456，但是字符串x指向还是123\")])])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}