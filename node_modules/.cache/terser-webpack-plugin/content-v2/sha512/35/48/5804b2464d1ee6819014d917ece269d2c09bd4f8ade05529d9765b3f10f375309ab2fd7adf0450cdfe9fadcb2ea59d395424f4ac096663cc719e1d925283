{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{410:function(t,e,v){\"use strict\";v.r(e);var n=v(42),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[v(\"h2\",{attrs:{id:\"java-servlet\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#java-servlet\"}},[t._v(\"#\")]),t._v(\" Java Servlet\")]),t._v(\" \"),v(\"h3\",{attrs:{id:\"servlet-简介\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#servlet-简介\"}},[t._v(\"#\")]),t._v(\" Servlet 简介\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"p\",[v(\"code\",[t._v(\"Servlet\")]),t._v(\" :JAVA Servlet 是运行在web服务器或应用服务器上的程序，它是作为来自web浏览器或其它HTTP客户端的请求和HTTP服务器上的数据库或\\n应用程序之间的\"),v(\"strong\",[t._v(\"中间层\")])])]),t._v(\" \"),v(\"li\",[v(\"p\",[v(\"code\",[t._v(\"Servlet 任务\")]),t._v(\" :\\nservlet执行以下主要任务：\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"读取客户端（浏览器）发送的显式的数据。这包括网页上的 HTML 表单，或者也可以是来自 applet 或自定义的 HTTP 客户端程序的表单。\")]),t._v(\" \"),v(\"li\",[t._v(\"读取客户端（浏览器）发送的隐式的 HTTP 请求数据。这包括 cookies、媒体类型和浏览器能理解的压缩格式等等。\")]),t._v(\" \"),v(\"li\",[t._v(\"处理数据并生成结果。这个过程可能需要访问数据库，执行 RMI 或 CORBA 调用，调用 Web 服务，或者直接计算得出对应的响应。\")]),t._v(\" \"),v(\"li\",[t._v(\"发送显式的数据（即文档）到客户端（浏览器）。该文档的格式可以是多种多样的，包括文本文件（HTML 或 XML）、二进制文件（GIF 图像）、Excel 等。\")]),t._v(\" \"),v(\"li\",[t._v(\"发送隐式的 HTTP 响应到客户端（浏览器）。这包括告诉浏览器或其他客户端被返回的文档类型（例如 HTML），设置 cookies 和缓存参数，以及其他类似的任务。\")])])])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"servlet-生命周期\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#servlet-生命周期\"}},[t._v(\"#\")]),t._v(\" Servlet 生命周期\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"p\",[t._v(\"Servlet 生命周期可被定义为从创建直到毁灭的整个过程。以下是 Servlet 遵循的过程：\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"Servlet 通过调用 init () 方法进行初始化。\")]),t._v(\" \"),v(\"li\",[t._v(\"Servlet 调用 service() 方法来处理客户端的请求。\")]),t._v(\" \"),v(\"li\",[t._v(\"Servlet 通过调用 destroy() 方法终止（结束）。\")]),t._v(\" \"),v(\"li\",[t._v(\"最后，Servlet 是由 JVM 的垃圾回收器进行垃圾回收的。\")])])]),t._v(\" \"),v(\"li\",[v(\"p\",[v(\"strong\",[t._v(\"init() 方法\")])]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"init 方法被设计成只调用一次。它在第一次创建 Servlet 时被调用。\")]),t._v(\" \"),v(\"li\",[t._v(\"Servlet 创建于用户第一次调用对应于该 Servlet 的 URL 时，但是您也可以指定 Servlet 在服务器第一次启动时被加载。\")]),t._v(\" \"),v(\"li\",[t._v(\"当用户调用一个 Servlet 时，就会创建一个 Servlet 实例，每一个用户请求都会产生一个新的线程，适当的时候移交给 doGet 或 doPost 方法。\")])])]),t._v(\" \"),v(\"li\",[v(\"p\",[v(\"strong\",[t._v(\"service() 方法\")])]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"service() 方法是执行实际任务的主要方法。Servlet 容器（即 Web 服务器）调用 service() 方法来处理来自客户端（浏览器）的请求，并把格式化的响应写回给客户端。\")]),t._v(\" \"),v(\"li\",[t._v(\"每次服务器接收到一个 Servlet 请求时，服务器会\"),v(\"em\",[t._v(\"产生一个新的线程\")]),t._v(\"并调用服务。service() 方法检查 HTTP 请求类型（GET、POST、PUT、DELETE 等），并在适当的时候调用 doGet、doPost、doPut，doDelete 等方法。\")])])]),t._v(\" \"),v(\"li\",[v(\"p\",[v(\"strong\",[t._v(\"destroy() 方法\")])]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"destroy() 方法只会被调用一次，在 Servlet 生命周期结束时被调用。\")])])])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"客户端-http-请求\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#客户端-http-请求\"}},[t._v(\"#\")]),t._v(\" 客户端 HTTP 请求\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"当浏览器请求网页时，它会向 Web 服务器发送特定信息，这些信息不能被直接读取，因为这些信息是作为 HTTP 请求的头的一部分进行传输的。\")]),t._v(\" \"),v(\"li\",[t._v(\"以下是来自于浏览器端的重要头信息，您可以在 Web 编程中频繁使用：\")])]),t._v(\" \"),v(\"table\",[v(\"thead\",[v(\"tr\",[v(\"th\",[t._v(\"头信息\")]),t._v(\" \"),v(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"描述\")])])]),t._v(\" \"),v(\"tbody\",[v(\"tr\",[v(\"td\",[t._v(\"Accept\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指定浏览器或其他客户端可以处理的 MIME 类型。值 image/png 或 image/jpeg 是最常见的两种可能值。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Accept-Charset\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指定浏览器可以用来显示信息的字符集。例如 ISO-8859-1\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Accept-Encoding\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指定浏览器知道如何处理的编码类型。值 gzip 或 compress 是最常见的两种可能值\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Accept-Language\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指定客户端的首选语言，在这种情况下，Servlet 会产生多种语言的结果。例如，en、en-us、ru 等\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Authorization\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息用于客户端在访问受密码保护的网页时识别自己的身份\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Connection\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指示客户端是否可以处理持久 HTTP 连接。持久连接允许客户端或其他浏览器通过单个请求来检索多个文件。值 Keep-Alive 意味着使用了持续连接\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Content-Length\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息只适用于 POST 请求，并给出 POST 数据的大小（以字节为单位）\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Cookie\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息把之前发送到浏览器的 cookies 返回到服务器。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Host\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指定原始的 URL 中的主机和端口。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"If-Modified-Since\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息表示只有当页面在指定的日期后已更改时，客户端想要的页面。如果没有新的结果可以使用，服务器会发送一个 304 代码，表示 Not Modified 头信息。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"If-Unmodified-Since\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息是 If-Modified-Since 的对立面，它指定只有当文档早于指定日期时，操作才会成功。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Refere\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指示所指向的 Web 页的 URL。例如，如果您在网页 1，点击一个链接到网页 2，当浏览器请求网页 2 时，网页 1 的 URL 就会包含在 Referer 头信息中。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"User-Agent\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息识别发出请求的浏览器或其他客户端，并可以向不同类型的浏览器返回不同的内容。\")])])])]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"strong\",[t._v(\"读取 HTTP 头的方法\")]),t._v(\" \"),v(\"em\",[t._v(\"下面的方法可用在 Servlet 程序中读取 HTTP 头。这些方法通过 HttpServletRequest 对象可用。\")])])]),t._v(\" \"),v(\"table\",[v(\"thead\",[v(\"tr\",[v(\"th\",[t._v(\"方法\")]),t._v(\" \"),v(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"描述\")])])]),t._v(\" \"),v(\"tbody\",[v(\"tr\",[v(\"td\",[t._v(\"Cookie[] getCookies()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回一个数组，包含客户端发送该请求的所有的 Cookie 对象。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Enumeration getAttributeNames()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回一个枚举，包含提供给该请求可用的属性名称。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Enumeration getHeaderNames()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回一个枚举，包含在该请求中包含的所有的头名。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Enumeration getParameterNames()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回一个 String 对象的枚举，包含在该请求中包含的参数的名称。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"HttpSession getSession()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回与该请求关联的当前 session 会话，或者如果请求没有 session 会话，则创建一个。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"HttpSession getSession(boolean create)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回与该请求关联的当前 HttpSession，或者如果没有当前会话，且创建是真的，则返回一个新的 session 会话。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Locale getLocale()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"基于 Accept-Language 头，返回客户端接受内容的首选的区域设置。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Object getAttribute(String name)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"以对象形式返回已命名属性的值，如果没有给定名称的属性存在，则返回 null。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"ServletInputStream getInputStream()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"使用 ServletInputStream，以二进制数据形式检索请求的主体。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getAuthType()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v('返回用于保护 Servlet 的身份验证方案的名称，例如，\"BASIC\" 或 \"SSL\"，如果JSP没有受到保护则返回 null。')])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getCharacterEncoding()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回请求主体中使用的字符编码的名称。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getContentType()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回请求主体的 MIME 类型，如果不知道类型则返回 null。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getContextPath()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回指示请求上下文的请求 URI 部分。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getHeader(String name)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"以字符串形式返回指定的请求头的值。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getMethod()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回请求的 HTTP 方法的名称，例如，GET、POST 或 PUT。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getParameter(String name)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"以字符串形式返回请求参数的值，或者如果参数不存在则返回 null。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getPathInfo()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"当请求发出时，返回与客户端发送的 URL 相关的任何额外的路径信息。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getProtocol()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回请求协议的名称和版本。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getQueryString()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回包含在路径后的请求 URL 中的查询字符串。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getRemoteAddr()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回发送请求的客户端的互联网协议（IP）地址。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getRemoteHost()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回发送请求的客户端的完全限定名称。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getRemoteUser()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"如果用户已通过身份验证，则返回发出请求的登录用户，或者如果用户未通过身份验证，则返回 null。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getRequestURI()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"从协议名称直到 HTTP 请求的第一行的查询字符串中，返回该请求的 URL 的一部分。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getRequestedSessionId()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回由客户端指定的 session 会话 ID。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String getServletPath()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回调用 JSP 的请求的 URL 的一部分。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String[] getParameterValues(String name)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回一个字符串对象的数组，包含所有给定的请求参数的值，如果参数不存在则返回 null。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"boolean isSecure()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回一个布尔值，指示请求是否使用安全通道，如 HTTPS。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"int getContentLength()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"以字节为单位返回请求主体的长度，并提供输入流，或者如果长度未知则返回 -1。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"int getIntHeader(String name)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回指定的请求头的值为一个 int 值。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"int getServerPort()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回接收到这个请求的端口号。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"int getParameterMap()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"将参数封装成 Map 类型。\")])])])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"服务器-http-响应\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#服务器-http-响应\"}},[t._v(\"#\")]),t._v(\" 服务器 HTTP 响应\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"当一个 Web 服务器响应一个 HTTP 请求时，响应通常包括一个状态行、一些响应报头、一个空行和文档。\")]),t._v(\" \"),v(\"li\",[t._v(\"下表总结了从 Web 服务器端返回到浏览器的最有用的 HTTP 1.1 响应报头，您会在 Web 编程中频繁地使用它们：\")])]),t._v(\" \"),v(\"table\",[v(\"thead\",[v(\"tr\",[v(\"th\",[t._v(\"头信息\")]),t._v(\" \"),v(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"描述\")])])]),t._v(\" \"),v(\"tbody\",[v(\"tr\",[v(\"td\",[t._v(\"Allow\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指定服务器支持的请求方法（GET、POST 等）。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Cache-Control\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指定响应文档在何种情况下可以安全地缓存。可能的值有：public、private 或 no-cache 等。Public 意味着文档是可缓存，Private 意味着文档是单个用户私用文档，且只能存储在私有（非共享）缓存中，no-cache 意味着文档不应被缓存。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Connection\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指示浏览器是否使用持久 HTTP 连接。值 close 指示浏览器不使用持久 HTTP 连接，值 keep-alive 意味着使用持久连接。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Content-Disposition\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息可以让您请求浏览器要求用户以给定名称的文件把响应保存到磁盘。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Content-Encoding\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"在传输过程中，这个头信息指定页面的编码方式。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Content-Language\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息表示文档编写所使用的语言。例如，en、en-us、ru 等。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Content-Length\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指示响应中的字节数。只有当浏览器使用持久（keep-alive）HTTP 连接时才需要这些信息。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Content-Type\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息提供了响应文档的 MIME（Multipurpose Internet Mail Extension）类型。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Expires\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指定内容过期的时间，在这之后内容不再被缓存。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Last-Modified\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指示文档的最后修改时间。然后，客户端可以缓存文件，并在以后的请求中通过 If-Modified-Since 请求头信息提供一个日期。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Location\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息应被包含在所有的带有状态码的响应中。在 300s 内，这会通知浏览器文档的地址。浏览器会自动重新连接到这个位置，并获取新的文档。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Refresh\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指定浏览器应该如何尽快请求更新的页面。您可以指定页面刷新的秒数。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Retry-After\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息可以与 503（Service Unavailable 服务不可用）响应配合使用，这会告诉客户端多久就可以重复它的请求\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"Set-Cookie\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"这个头信息指定一个与页面关联的 cookie。\")])])])]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"strong\",[t._v(\"设置 HTTP 响应报头的方法\")])])]),t._v(\" \"),v(\"p\",[v(\"em\",[t._v(\"下面的方法可用于在 Servlet 程序中设置 HTTP 响应报头。这些方法通过 HttpServletResponse 对象可用。\")])]),t._v(\" \"),v(\"table\",[v(\"thead\",[v(\"tr\",[v(\"th\",[t._v(\"方法\")]),t._v(\" \"),v(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"描述\")])])]),t._v(\" \"),v(\"tbody\",[v(\"tr\",[v(\"td\",[t._v(\"String encodeRedirectURL(String url)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"为 sendRedirect 方法中使用的指定的 URL 进行编码，或者如果编码不是必需的，则返回 URL 未改变。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"String encodeURL(String url)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"对包含 session 会话 ID 的指定 URL 进行编码，或者如果编码不是必需的，则返回 URL 未改变。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"boolean containsHeader(String name)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回一个布尔值，指示是否已经设置已命名的响应报头。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"boolean isCommitted()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"返回一个布尔值，指示响应是否已经提交。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void addCookie(Cookie cookie)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"把指定的 cookie 添加到响应。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void addDateHeader(String name, long date)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"添加一个带有给定的名称和日期值的响应报头。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void addHeader(String name, String value)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"添加一个带有给定的名称和值的响应报头。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void addIntHeader(String name, int value)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"添加一个带有给定的名称和整数值的响应报头。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void flushBuffer()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"强制任何在缓冲区中的内容被写入到客户端。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void reset()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"清除缓冲区中存在的任何数据，包括状态码和头。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void resetBuffer()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"清除响应中基础缓冲区的内容，不清除状态码和头。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void sendError(int sc)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"使用指定的状态码发送错误响应到客户端，并清除缓冲区.\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void sendError(int sc, String msg)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"使用指定的状态发送错误响应到客户端。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void sendRedirect(String location)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"使用指定的重定向位置 URL 发送临时重定向响应到客户端。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void setBufferSize(int size)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"为响应主体设置首选的缓冲区大小。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void setCharacterEncoding(String charset)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"设置被发送到客户端的响应的字符编码（MIME 字符集）例如，UTF-8。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void setContentLength(int len)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"设置在 HTTP Servlet 响应中的内容主体的长度，该方法设置 HTTP Content-Length 头。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void setContentType(String type)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"如果响应还未被提交，设置被发送到客户端的响应的内容类型。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void setDateHeader(String name, long date)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"设置一个带有给定的名称和日期值的响应报头。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void setHeader(String name, String value)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"设置一个带有给定的名称和值的响应报头。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void setIntHeader(String name, int value)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"设置一个带有给定的名称和整数值的响应报头。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void setLocale(Locale loc)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"如果响应还未被提交，设置响应的区域。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"void setStatus(int sc)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"为该响应设置状态码。\")])])])]),t._v(\" \"),v(\"h2\",{attrs:{id:\"cookie-处理\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#cookie-处理\"}},[t._v(\"#\")]),t._v(\" Cookie 处理\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"p\",[t._v(\"Cookie 是存储在\"),v(\"strong\",[t._v(\"客户端\")]),t._v(\"计算机上的文本文件，并保留了各种跟踪信息。Java Servlet 显然支持 HTTP Cookie。\")])]),t._v(\" \"),v(\"li\",[v(\"p\",[t._v(\"识别返回用户包括三个步骤：\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"服务器脚本向浏览器发送一组 Cookie。例如：姓名、年龄或识别号码等。\")]),t._v(\" \"),v(\"li\",[t._v(\"浏览器将这些信息存储在本地计算机上，以备将来使用。\")]),t._v(\" \"),v(\"li\",[t._v(\"当下一次浏览器向 Web 服务器发送任何请求时，浏览器会把这些 Cookie 信息发送到服务器，服务器将使用这些信息来识别用户。\")])])])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"cookie-剖析\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#cookie-剖析\"}},[t._v(\"#\")]),t._v(\" Cookie 剖析\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"Cookie 通常设置在 HTTP 头信息中\")]),t._v(\" \"),v(\"li\",[t._v(\"设置 Cookie 的 Servlet 会发送如下的头信息：\")])]),t._v(\" \"),v(\"div\",{staticClass:\"custom-block tip\"},[v(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"TIP\")]),t._v(\" \"),v(\"p\",[t._v(\"HTTP/1.1 200 OK\\nDate: Fri, 04 Feb 2000 21:03:38 GMT\")]),t._v(\" \"),v(\"p\",[t._v(\"Server: Apache/1.3.9 (UNIX) PHP/4.0b3\")]),t._v(\" \"),v(\"p\",[t._v(\"Set-Cookie: name=xyz; expires=Friday, 04-Feb-07 22:03:38 GMT;\\npath=/; domain=runoob.com\")]),t._v(\" \"),v(\"p\",[t._v(\"Connection: close\")]),t._v(\" \"),v(\"p\",[t._v(\"Content-Type: text/html\")]),t._v(\" \"),v(\"p\",[v(\"code\",[t._v('Set-Cookie 头包含了一个名称值对、一个 GMT 日期、一个路径和一个域。名称和值会被 URL 编码。expires 字段是一个指令，告诉浏览器在给定的时间和日期之后\"忘记\"该 Cookie。')])])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"servlet-cookie-方法\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#servlet-cookie-方法\"}},[t._v(\"#\")]),t._v(\" Servlet Cookie 方法\")]),t._v(\" \"),v(\"table\",[v(\"thead\",[v(\"tr\",[v(\"th\",[t._v(\"方法\")]),t._v(\" \"),v(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"描述\")])])]),t._v(\" \"),v(\"tbody\",[v(\"tr\",[v(\"td\",[t._v(\"public void setDomain(String pattern)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法设置 cookie 适用的域，例如 runoob.com。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public String getDomain()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法获取 cookie 适用的域，例如 runoob.com。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public void setMaxAge(int expiry)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法设置 cookie 过期的时间（以秒为单位）。如果不这样设置，cookie 只会在当前 session 会话中持续有效。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public int getMaxAge()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法返回 cookie 的最大生存周期（以秒为单位），默认情况下，-1 表示 cookie 将持续下去，直到浏览器关闭。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public String getName()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法返回 cookie 的名称。名称在创建后不能改变。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public void setValue(String newValue)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法设置与 cookie 关联的值。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public String getValue()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法获取与 cookie 关联的值。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public void setPath(String uri)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法设置 cookie 适用的路径。如果您不指定路径，与当前页面相同目录下的（包括子目录下的）所有 URL 都会返回 cookie。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public String getPath()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法获取 cookie 适用的路径。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public void setSecure(boolean flag)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法设置布尔值，表示 cookie 是否应该只在加密的（即 SSL）连接上发送。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public void setComment(String purpose)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"设置cookie的注释。该注释在浏览器向用户呈现 cookie 时非常有用。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public String getComment()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"获取 cookie 的注释，如果 cookie 没有注释则返回 null。\")])])])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"通过-servlet-设置-cookie\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#通过-servlet-设置-cookie\"}},[t._v(\"#\")]),t._v(\" 通过 Servlet 设置 Cookie\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"通过 Servlet 设置 Cookie 包括三个步骤：\"),v(\"div\",{staticClass:\"language-java extra-class\"},[v(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[v(\"code\",[v(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 创建一个 Cookie 对象:\")]),t._v(\"\\n\"),v(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Cookie\")]),t._v(\" cookie \"),v(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),v(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Cookie\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),v(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"key\"')]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),v(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"value\"')]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n \"),v(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 设置最大生存周期：\")]),t._v(\"\\ncookie\"),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),v(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setMaxAge\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),v(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"60\")]),v(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),v(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"60\")]),v(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),v(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"24\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n\"),v(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//发送 Cookie 到 HTTP 响应头:\")]),t._v(\"\\nresponse\"),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),v(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"addCookie\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"cookie\"),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])])])]),t._v(\" \"),v(\"h2\",{attrs:{id:\"session-跟踪\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#session-跟踪\"}},[t._v(\"#\")]),t._v(\" Session 跟踪\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"p\",[t._v('HTTP 是一种\"无状态\"协议，这意味着每次客户端检索网页时，客户端打开一个单独的连接到 Web 服务器，服务器会自动不保留之前客户端请求的任何记录。')])]),t._v(\" \"),v(\"li\",[v(\"p\",[t._v(\"但是仍然有以下三种方式来维持 Web 客户端和 Web 服务器之间的 session 会话：\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"p\",[v(\"code\",[t._v(\"Cookies\")]),t._v(\": \"),v(\"strong\",[t._v(\"一个 Web 服务器可以分配一个唯一的 session 会话 ID 作为每个 Web 客户端的 cookie。\")]),t._v(\"\\n这可能不是一个有效的方法，因为很多浏览器不支持 cookie，所以我们建议不要使用这种方式来维持 session 会话。\")])]),t._v(\" \"),v(\"li\",[v(\"p\",[v(\"code\",[t._v(\"隐藏的表单字段\")]),t._v(\": \"),v(\"strong\",[t._v(\"Web 服务器可以发送一个隐藏的 HTML 表单字段，以及一个唯一的 session 会话 ID。\")]),t._v(\"\\n但是点击常规的超文本链接不会导致表单提交，因此隐藏的表单字段也不支持常规的 session 会话跟踪。\")])]),t._v(\" \"),v(\"li\",[v(\"p\",[v(\"code\",[t._v(\"URL 重写:\")]),v(\"strong\",[t._v(\"在每个 URL 末尾追加一些额外的数据来标识 session 会话。\")]),t._v(\"\\n它的缺点是会动态生成每个 URL 来为页面分配一个 session 会话 ID，即使是在很简单的静态 HTML 页面中也会如此。\")])])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"httpsession-对象\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#httpsession-对象\"}},[t._v(\"#\")]),t._v(\" HttpSession 对象\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"p\",[t._v(\"除了上述的三种方式，Servlet 还提供了 HttpSession 接口，该接口提供了一种跨多个页面请求或访问网站时识别用户以及存储有关用户信息的方式。\")])]),t._v(\" \"),v(\"li\",[v(\"p\",[t._v(\"Servlet 容器使用这个接口来创建一个 HTTP 客户端和 HTTP 服务器之间的 session 会话。会话持续一个指定的时间段，跨多个连接或页面请求。\\n您会通过调用 HttpServletRequest 的公共方法 getSession() 来获取 HttpSession 对象，如下所示：\")])])]),t._v(\" \"),v(\"div\",{staticClass:\"language-java extra-class\"},[v(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[v(\"code\",[v(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"HttpSession\")]),t._v(\" session \"),v(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" request\"),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),v(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getSession\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),v(\"ul\",[v(\"li\",[t._v(\"你需要在向客户端发送任何文档内容之前调用 request.getSession()。下面总结了 HttpSession 对象中可用的几个重要的方法：\")])]),t._v(\" \"),v(\"table\",[v(\"thead\",[v(\"tr\",[v(\"th\",[t._v(\"方法\")]),t._v(\" \"),v(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"描述\")])])]),t._v(\" \"),v(\"tbody\",[v(\"tr\",[v(\"td\",[t._v(\"public Object getAttribute(String name)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法返回在该 session 会话中具有指定名称的对象，如果没有指定名称的对象，则返回 null。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public Enumeration getAttributeNames()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法返回 String 对象的枚举，String 对象包含所有绑定到该 session 会话的对象的名称。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public long getCreationTime()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法返回该 session 会话被创建的时间，自格林尼治标准时间 1970 年 1 月 1 日午夜算起，以毫秒为单位。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public String getId()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法返回一个包含分配给该 session 会话的唯一标识符的字符串。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public long getLastAccessedTime()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法返回客户端最后一次发送与该 session 会话相关的请求的时间自格林尼治标准时间 1970 年 1 月 1 日午夜算起，以毫秒为单位\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public int getMaxInactiveInterval()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法返回 Servlet 容器在客户端访问时保持 session 会话打开的最大时间间隔，以秒为单位。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public void invalidate()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法指示该 session 会话无效，并解除绑定到它上面的任何对象。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public boolean isNew()\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"如果客户端还不知道该 session 会话，或者如果客户选择不参入该 session 会话，则该方法返回 true。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public void removeAttribute(String name)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法将从该 session 会话移除指定名称的对象。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public void setAttribute(String name, Object value)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法使用指定的名称绑定一个对象到该 session 会话。\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"public void setMaxInactiveInterval(int interval)\")]),t._v(\" \"),v(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"该方法在 Servlet 容器指示该 session 会话无效之前，指定客户端请求之间的时间，以秒为单位。\")])])])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"删除-session-会话数据\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#删除-session-会话数据\"}},[t._v(\"#\")]),t._v(\" 删除 Session 会话数据\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"当您完成了一个用户的 session 会话数据，您有以下几种选择：\\n\"),v(\"ul\",[v(\"li\",[v(\"code\",[t._v(\"移除一个特定的属性：\")]),t._v(\"您可以调用 public void removeAttribute(String name) 方法来删除与特定的键相关联的值。\\n-\"),v(\"code\",[t._v(\"删除整个 session 会话：\")]),t._v(\"您可以调用 public void invalidate() 方法来丢弃整个 session 会话。\")]),t._v(\" \"),v(\"li\",[v(\"code\",[t._v(\"设置 session 会话过期时间：\")]),t._v(\"您可以调用 public void setMaxInactiveInterval(int interval) 方法来单独设置 session 会话超时。\")]),t._v(\" \"),v(\"li\",[v(\"code\",[t._v(\"注销用户：\")]),t._v(\"如果使用的是支持 servlet 2.4 的服务器，您可以调用 logout 来注销 Web 服务器的客户端，并把属于所有用户的所有 session 会话设置为无效。\")]),t._v(\" \"),v(\"li\",[v(\"code\",[t._v(\"web.xml 配置：\")]),t._v(\"如果您使用的是 Tomcat，除了上述方法，您还可以在 web.xml 文件中配置 session 会话超时，如下所示：\")])]),t._v(\" \"),v(\"div\",{staticClass:\"language-xml extra-class\"},[v(\"pre\",{pre:!0,attrs:{class:\"language-xml\"}},[v(\"code\",[t._v(\"  \"),v(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[v(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),t._v(\"session-config\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"\\n    \"),v(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[v(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),t._v(\"session-timeout\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"15\"),v(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[v(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"</\")]),t._v(\"session-timeout\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"\\n  \"),v(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[v(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"</\")]),t._v(\"session-config\")]),v(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"\\n\")])])])])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);","extractedComments":[]}