{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{418:function(s,t,e){\"use strict\";e.r(t);var n=e(14),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[e(\"h2\",{attrs:{id:\"redis基础\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redis基础\"}},[s._v(\"#\")]),s._v(\" Redis基础\")]),s._v(\" \"),e(\"h3\",{attrs:{id:\"redis入门\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redis入门\"}},[s._v(\"#\")]),s._v(\" Redis入门\")]),s._v(\" \"),e(\"h4\",{attrs:{id:\"_1-nosql\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-nosql\"}},[s._v(\"#\")]),s._v(\" 1.NoSQL\")]),s._v(\" \"),e(\"ul\",[e(\"li\",[e(\"p\",[s._v(\"NoSQL:即Not-Only SQL(泛指非关系型数据库)，作为关系型数据库的补充。\")])]),s._v(\" \"),e(\"li\",[e(\"p\",[s._v(\"作用：应对基于海量用户和海量数据前提下的数据处理问题。\")])]),s._v(\" \"),e(\"li\",[e(\"p\",[s._v(\"特征：\")]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"可伸缩，可扩容\")]),s._v(\" \"),e(\"li\",[s._v(\"大数据量下的高性能\")]),s._v(\" \"),e(\"li\",[s._v(\"灵活的数据类型\")]),s._v(\" \"),e(\"li\",[s._v(\"高可用\")])])]),s._v(\" \"),e(\"li\",[e(\"p\",[s._v(\"常见的NoSQL\")]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"Redis\")]),s._v(\" \"),e(\"li\",[s._v(\"memcache\")]),s._v(\" \"),e(\"li\",[s._v(\"HBase\")]),s._v(\" \"),e(\"li\",[s._v(\"MongoDB\")])])])]),s._v(\" \"),e(\"h4\",{attrs:{id:\"_2-redis-简介\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-redis-简介\"}},[s._v(\"#\")]),s._v(\" 2.Redis 简介\")]),s._v(\" \"),e(\"ul\",[e(\"li\",[e(\"p\",[s._v(\"Redis: (REmote DIctionary Server) 是C语言开发的开源高性能的键值对\"),e(\"code\",[s._v(\"key-value\")]),s._v(\"数据库。\")])]),s._v(\" \"),e(\"li\",[e(\"p\",[e(\"strong\",[s._v(\"特征：\")])]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"数据间没有必然的关联关系\")]),s._v(\" \"),e(\"li\",[s._v(\"内部采用单线程机制进行工作\")]),s._v(\" \"),e(\"li\",[s._v(\"高性能（官方测试：50个并发执行100000个请求，读的速度是110000次/s,写的速度是81000次/s）\")]),s._v(\" \"),e(\"li\",[s._v(\"多数据类型支持\\n\"),e(\"ul\",[e(\"li\",[s._v(\"字符串类型 string\")]),s._v(\" \"),e(\"li\",[s._v(\"列表类型 list\")]),s._v(\" \"),e(\"li\",[s._v(\"散列类型 hash\")]),s._v(\" \"),e(\"li\",[s._v(\"集合类型 set\")]),s._v(\" \"),e(\"li\",[s._v(\"有序集合类型 sorted_set\")])])]),s._v(\" \"),e(\"li\",[s._v(\"持久化支持，可进行数据容灾恢复\")])])]),s._v(\" \"),e(\"li\",[e(\"p\",[e(\"strong\",[s._v(\"Redis 应用\")])]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"为热点数据加速查询（主要场景），比如热点商品，热点资讯等高访问量信息等。\")]),s._v(\" \"),e(\"li\",[s._v(\"任务队列，如秒杀、抢购、购票排队等。\")]),s._v(\" \"),e(\"li\",[s._v(\"即时信息查询，如各类排行榜、网站访问统计、公交到站信息、在线人数信息、设备信号等。\")]),s._v(\" \"),e(\"li\",[s._v(\"时效信息控制，如验证码控制，投票控制等。\")]),s._v(\" \"),e(\"li\",[s._v(\"分布式数据共享，比如分布式应用中的session共享。\")]),s._v(\" \"),e(\"li\",[s._v(\"消息队列\")]),s._v(\" \"),e(\"li\",[s._v(\"分布式锁\")])])])]),s._v(\" \"),e(\"h3\",{attrs:{id:\"数据类型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据类型\"}},[s._v(\"#\")]),s._v(\" 数据类型\")]),s._v(\" \"),e(\"h4\",{attrs:{id:\"_1-string字符串\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-string字符串\"}},[s._v(\"#\")]),s._v(\" 1.\"),e(\"strong\",[s._v(\"string字符串\")])]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"存储的数据：单个数据，最简单的数据存储类型，也是最常用的数据存储类型\")]),s._v(\" \"),e(\"li\",[s._v(\"存储的数据格式： 一个存储空间保存一个数据\")]),s._v(\" \"),e(\"li\",[s._v(\"存储的内容： 通常使用字符串，如果字符串以整数的形式展示，可以作为数字操作使用\")])]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#添加/修改数据\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"set\")]),s._v(\" key value\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取数据\")]),s._v(\"\\nget key\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#删除\")]),s._v(\"\\ndel key\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 添加/修改多个\")]),s._v(\"\\nmset key1 value1 key2 value2\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取多个\")]),s._v(\"\\nmget key1 key2\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取字符串长度\")]),s._v(\"\\nstrlen key\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#追加数据到值后面\")]),s._v(\"\\nappend key value\\n\")])])]),e(\"ul\",[e(\"li\",[s._v(\"string 类型的扩展操作\\n\"),e(\"ul\",[e(\"li\",[s._v(\"string在redis内部就是个字符串，但是遇到incr、decr会转成数值运算\")]),s._v(\" \"),e(\"li\",[s._v(\"redis所有操作都是原子性的，采用单线程处理所有请求，无需考虑并发数据一致性问题\")]),s._v(\" \"),e(\"li\",[s._v(\"数值的操作时候，超过redis上限会报错（java中long.MAX_VALUE）\")])])])]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 设置数值增加指定范围的值（可以解决mysql分表后主键唯一的问题）\")]),s._v(\"\\nincr key\\nincrby key increment \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#指定步长\")]),s._v(\"\\nincrbyfloat key increment \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#可以加小数\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 设置数值减少指定范围的值\")]),s._v(\"\\ndecr key\\ndecrby key increment\\n\")])])]),e(\"ul\",[e(\"li\",[s._v(\"string 数据实效性设置\")])]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设置多少秒后实效\")]),s._v(\"\\nsetex key seconds value\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#毫秒\")]),s._v(\"\\npsetex key milliseconds value\\n\")])])]),e(\"ul\",[e(\"li\",[s._v(\"数据库中热点数据的key的命名规范\\n\"),e(\"ul\",[e(\"li\",[e(\"code\",[s._v(\"emp:id:88395515:name\")]),s._v(\" (表名:主键名:值:字段名)\")])])]),s._v(\" \"),e(\"li\",[s._v(\"应用场景\\n\"),e(\"ul\",[e(\"li\",[s._v(\"mysql分表的sequence管理\")]),s._v(\" \"),e(\"li\",[s._v(\"短信验证等5分钟时效过期\")])])])]),s._v(\" \"),e(\"h4\",{attrs:{id:\"_2-hash哈希\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-hash哈希\"}},[s._v(\"#\")]),s._v(\" 2.\"),e(\"strong\",[s._v(\"hash哈希\")])]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"存储需求： 对一系列存储的数据进行编组，方便管理，典型应用存储对象信息\")]),s._v(\" \"),e(\"li\",[s._v(\"需要的存储结构：一个存储空间保存多个键值对数据\")]),s._v(\" \"),e(\"li\",[s._v(\"hash类型： 底层使用哈希表结构实现数据存储\\n\"),e(\"ul\",[e(\"li\",[s._v(\"hash类型下的value只能存字符串，不允许其它结构\")]),s._v(\" \"),e(\"li\",[s._v(\"每个hash可以存储2^32-1个键值对\")]),s._v(\" \"),e(\"li\",[s._v(\"hash类型十分贴近对象的数据存储类型，并且可以灵活的增加删除对象属性，但hash设计初衷不是为了存大量对象而设计的，切记不可乱用，更不可将hash作为对象列表使用\")]),s._v(\" \"),e(\"li\",[s._v(\"hgetall操作可以获取全部属性，如果内部field过多，遍历的整体效率会低，有可能成为数据访问的瓶颈\")])])])]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#添加/修改数据\")]),s._v(\"\\nhset key field value\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 获取数据\")]),s._v(\"\\nhget key field\\nhgetall key\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#删除数据\")]),s._v(\"\\nhdel key field1\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#添加/修改多个数据\")]),s._v(\"\\nhmset key field1 value1 field2 value2\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取多个值\")]),s._v(\"\\nhmget key field1 field2\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取hash表中字段的数量\")]),s._v(\"\\nhlen key\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取hash表中是否存在指定字段\")]),s._v(\"\\nhexists key field1\\n\")])])]),e(\"ul\",[e(\"li\",[s._v(\"hash扩展操作与使用注意\")])]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取hash表中所有的field名\")]),s._v(\"\\nhkeys key\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取hash表中所有的value值\")]),s._v(\"\\nhvals key\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#指定字段的数值增加指定范围的值\")]),s._v(\"\\nhincrby key field incrment\\nhincrbyfloat key filde incrment\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#如果没值set,有的话什么都不做(value不同也不操作)\")]),s._v(\"\\nhsetnx key field value\\n\")])])]),e(\"ul\",[e(\"li\",[e(\"p\",[s._v(\"string的json字符串和hash存储区别\")]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"string的json读为主\")]),s._v(\" \"),e(\"li\",[s._v(\"hash的存储可以灵活增减，适用数据修改较多情况\")])])]),s._v(\" \"),e(\"li\",[e(\"p\",[s._v(\"应用场景\")]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"用户购物车\")]),s._v(\" \"),e(\"li\",[s._v(\"抢购\")])])])]),s._v(\" \"),e(\"h4\",{attrs:{id:\"_3-list列表\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-list列表\"}},[s._v(\"#\")]),s._v(\" 3.\"),e(\"strong\",[s._v(\"list列表\")])]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"数据存储需求：存储多个数据，并对数据进入存储空间的顺序进行区分\")]),s._v(\" \"),e(\"li\",[s._v(\"需要的数据结构： 一个存储空间保存多个数据，且通过数据体现进入的顺序\")]),s._v(\" \"),e(\"li\",[s._v(\"list类型：保存多个数据，地层使用双向链表存储结构实现\")])]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#添加/修改数据\")]),s._v(\"\\nlpush key value1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"value2\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#左push,后lpush的在前面\")]),s._v(\"\\nrpush key value1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"value2\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#右push，跟push顺序一致 \")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取数据\")]),s._v(\"\\nlrange key start stop \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#左开始读，start stop理解为开始-结束的index(0 -1看所有)\")]),s._v(\"\\nlindex key index \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#直接下标读取\")]),s._v(\"\\nllen key \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取长度\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取并移除\")]),s._v(\"\\nlpop key \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#左边弹出1个\")]),s._v(\"\\nrpop key \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#右边弹出1个\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#移除指定数据\")]),s._v(\"\\nlrem key count value \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#count是个数，list值有重复的情况\")]),s._v(\"\\n\")])])]),e(\"ul\",[e(\"li\",[s._v(\"list的阻塞数据获取\")])]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#规定时间获取并移除数据\")]),s._v(\"\\nblpop key1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"key2\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"timeout\")]),s._v(\"\\nbropo key1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"key2\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"timeout\")]),s._v(\"\\n\")])])]),e(\"ul\",[e(\"li\",[s._v(\"list操作注意事项\\n\"),e(\"ul\",[e(\"li\",[s._v(\"list中保存的都是string类型，值的个数也是2^32-1个\")]),s._v(\" \"),e(\"li\",[s._v(\"list具有索引概念 。通常操作以队列形式出队入队，或以栈的形式出栈入栈\")]),s._v(\" \"),e(\"li\",[s._v(\"获取全内容结束索引为-1\")]),s._v(\" \"),e(\"li\",[s._v(\"list可以对数据分页操作，通常第一页走redis,后续页查询数据库\")])])]),s._v(\" \"),e(\"li\",[s._v(\"应用场景\\n\"),e(\"ul\",[e(\"li\",[s._v(\"最新消息的展示\")])])])]),s._v(\" \"),e(\"h4\",{attrs:{id:\"_4-set集合\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-set集合\"}},[s._v(\"#\")]),s._v(\" 4.\"),e(\"strong\",[s._v(\"set集合\")])]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"新的存储需求：存储大量数据，在查询方面更高效率\")]),s._v(\" \"),e(\"li\",[s._v(\"需要的存储结构： 能够保存大量数据，高效的内部存储结构，便于查询\")]),s._v(\" \"),e(\"li\",[s._v(\"对hash结构的变形，仅使用field的存储空间\")])]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#添加数据\")]),s._v(\"\\nsadd key member1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"member2\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取全部\")]),s._v(\"\\nsmembers key\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#删除数据\")]),s._v(\"\\nsrem key member1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"member2\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取集合总量\")]),s._v(\"\\nscard key\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#判断集合中包含某元素\")]),s._v(\"\\nsismember key member1\\n\")])])]),e(\"ul\",[e(\"li\",[s._v(\"set的随机取值删值操作\\n\"),e(\"ul\",[e(\"li\",[s._v(\"业务场景 (随机推 ： 每位用户注册今日头条，都会让选择几项新闻类型，但是后期为了增加用户活跃度，必须让用户对其他类别逐渐产生兴趣，增加客户留存（随机取一定数量的热点类别加入到用户自己选择的类别中)\")])])])]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#随机获取集合中指定数量的数据\")]),s._v(\"\\nsrandmember key \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"count\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#随机获取集合中某几个数据并移除集合\")]),s._v(\"\\nspop key   \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"count\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"     \\n\")])])]),e(\"ul\",[e(\"li\",[s._v(\"set数据交并差操作\\n\"),e(\"ul\",[e(\"li\",[s._v(\"业务场景（社交软件可能认识的人）\")])])])]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#求两个set的交集、并集、差集\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 交集（权限set对权限去重）\")]),s._v(\"\\nsinter key1 key2\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#并集\")]),s._v(\"\\nsunion key1 key2\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#差集\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"sdiff\")]),s._v(\" key1 key2 \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#只查左边（key1）的差集\")]),s._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#求多个set的交集、并集、差集并存指定集合中\")]),s._v(\"\\nsinterstore destination key1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"key2\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\nsunionstore destination key1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"key2\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\nsdiffstore destination key1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"key2\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#将set中元素移动到另一个set中\")]),s._v(\"\\nsmove \"),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"source\")]),s._v(\" destination menber\\n\")])])]),e(\"ul\",[e(\"li\",[s._v(\"set操作注意事项\\n\"),e(\"ul\",[e(\"li\",[s._v(\"set类型不允许值重复\")]),s._v(\" \"),e(\"li\",[s._v(\"set虽然和hash存储结构相同，但是无法使用hash中的存储value的空间\")])])])]),s._v(\" \"),e(\"h4\",{attrs:{id:\"_5-sorted-set有序集合\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-sorted-set有序集合\"}},[s._v(\"#\")]),s._v(\" 5.\"),e(\"strong\",[s._v(\"sorted_set有序集合\")])]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"新的存储需求：数据排序有利于数据有效展示，需要提供一个根据自身特征进行排序的方式\")]),s._v(\" \"),e(\"li\",[s._v(\"sorted_set：在set的基础上，增加了可排序字段\")])]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#添加数据 （score是排序的规则顺序）\")]),s._v(\"\\nzadd key score1 member1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"score2 member2\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取全部数据\")]),s._v(\"\\nzrange key start stop \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"WITHSCORES\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#带上withscores参数，会显示score\")]),s._v(\"\\nzrevrange key start stop \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"WITHSCORES\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#反转显示 \")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#删除数据\")]),s._v(\"\\nzrem key member \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"menber1\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#按score值范围获取数据\")]),s._v(\"\\nzrangebyscore key min max \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"WITHSCORES\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"LIMIT\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#limit和mysql用法一样，筛选前几位\")]),s._v(\"\\nzrevrangebyscore key max min \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"WITHSCORES\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"LIMIT\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#按索引删除\")]),s._v(\"\\nzremrangebyrank key start stop \\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#按score值删除数据\")]),s._v(\"\\nzremrangebyscore key min max\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取集合总数\")]),s._v(\"\\nzcard key\\nzcount key min max \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#score范围count\")]),s._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#集合交集、并集 #score 会求和\")]),s._v(\"\\nzinterstore destination numkeys key1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"key2\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \\nzunionstore destination numkeys key1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"key2\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])])]),e(\"ul\",[e(\"li\",[s._v(\"sorted_set扩展操作\\n\"),e(\"ul\",[e(\"li\",[s._v(\"业务场景：各类榜单排名，根据score排序，根据score值顺序来获取值的索引\")])])])]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取数据对应的索引\")]),s._v(\"\\nzrank key member\\nzrevrank key menber\\n\\nzscore key member \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取score值\")]),s._v(\"\\nzincrby key increment member \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#score值的修改\")]),s._v(\"\\n\")])])]),e(\"ul\",[e(\"li\",[s._v(\"sorted_set注意事项\\n\"),e(\"ul\",[e(\"li\",[s._v(\"score可以保存整数和小数（双精度double），小数可能有精度问题\")]),s._v(\" \"),e(\"li\",[s._v(\"sorted_set地层还是set，其值不能重复，重复后一次覆盖前一次\")]),s._v(\" \"),e(\"li\",[s._v(\"score比较需要位数一致，否则可能不准确，不足的可以补0\")])])])]),s._v(\" \"),e(\"h3\",{attrs:{id:\"通用命令\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#通用命令\"}},[s._v(\"#\")]),s._v(\" 通用命令\")]),s._v(\" \"),e(\"h4\",{attrs:{id:\"_1-key通用命令\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-key通用命令\"}},[s._v(\"#\")]),s._v(\" 1.key通用命令\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#删除\")]),s._v(\"\\ndel key\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#key是否存在\")]),s._v(\"\\nexists key\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#根据key获取数据类型\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"type\")]),s._v(\" key\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#为key设置时效\")]),s._v(\"\\nexpire key seconds\\npexpire key milliseconds\\nexpireat key timstaamp\\npexpireat key milliseconds timstaamp\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取key的有效时间\")]),s._v(\"\\nttl key\\npttl key \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#毫秒\")]),s._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#切换key从有时效变为永久件\")]),s._v(\"\\npersist key\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#key的扩展操作 keys pattern\")]),s._v(\"\\nkeys * \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#查询所有\")]),s._v(\"\\nkeys it* \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#it开头的key\")]),s._v(\"\\nkeys *it  \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#it结尾的key\")]),s._v(\"\\nkeys ??it \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#前两个字符随意，后面it结尾\")]),s._v(\"\\nkeys user:? \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#查询user:开头，后一个字符随意\")]),s._v(\"\\nkeys u\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"st\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"er \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#查询u开头，er结尾，中间一个值为s或t\")]),s._v(\"\\n\")])])]),e(\"h4\",{attrs:{id:\"_2-数据库通用命令\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-数据库通用命令\"}},[s._v(\"#\")]),s._v(\" 2.数据库通用命令\")]),s._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#redis使用过程中，如果数据不区分种类、类别，可能会出现key重复的情况.\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#解决方案：redis为每个服务提供16个数据库，编号从0-15，每个数据库之间相互独立\")]),s._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#切换数据库\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"select\")]),s._v(\" index  \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#0-15  \")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#把本库数据移动到\")]),s._v(\"\\nmove key index\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#数据清除\")]),s._v(\"\\ndbsize \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#数据库大小\")]),s._v(\"\\nflushdb \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#清除本编号内的内容\")]),s._v(\"\\nflushall \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#清除所有\")]),s._v(\"\\n\")])])]),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#其他操作\")]),s._v(\"\\nquit\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"ping\")]),s._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"echo\")]),s._v(\" message\\n\")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);","extractedComments":[]}