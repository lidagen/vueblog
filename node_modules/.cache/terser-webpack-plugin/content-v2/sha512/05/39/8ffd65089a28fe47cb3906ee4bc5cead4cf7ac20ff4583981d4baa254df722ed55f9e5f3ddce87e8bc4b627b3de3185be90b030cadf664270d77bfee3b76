{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{337:function(t,s,a){\"use strict\";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"elacticsearch-基础\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#elacticsearch-基础\"}},[t._v(\"#\")]),t._v(\" ElacticSearch 基础\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"elactic-search概念\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#elactic-search概念\"}},[t._v(\"#\")]),t._v(\" Elactic Search概念\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"elactic-search是什么\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#elactic-search是什么\"}},[t._v(\"#\")]),t._v(\" Elactic Search是什么\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"简单说，Elasticsearch 就是一个分布式的搜索、聚合与分析引擎\")]),t._v(\" \"),a(\"li\",[t._v(\"它的目的是通过简单的RESTful API来隐藏Lucene的复杂性，让全文检索变简单\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"为什么需要-es\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么需要-es\"}},[t._v(\"#\")]),t._v(\" 为什么需要 ES\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"用数据库，也可以实现搜索的功能，为什么还需要搜索引擎呢？\\n\"),a(\"ul\",[a(\"li\",[t._v(\"数据库（理论上来讲，ES 也是数据库，这里的数据库，指的是关系型数据库），首先是存储，搜索只是顺便提供的功能，\")]),t._v(\" \"),a(\"li\",[t._v(\"而搜索引擎，首先是搜索，但是不把数据存下来就搜不了，所以只好存一存。\")]),t._v(\" \"),a(\"li\",[t._v(\"术业有专攻，专攻搜索的搜索引擎，自然会提供更强大的搜索能力。\")])])]),t._v(\" \"),a(\"li\",[t._v(\"精确匹配和相关性匹配\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"在使用数据库搜索时，我们更多的是基于「精确匹配」的搜索。\")]),t._v(\" \"),a(\"li\",[t._v(\"搜索引擎的「相关性匹配」更贴近人的思维方式。\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"搜索和分析，不只是搜索，还有分析\\n\"),a(\"ul\",[a(\"li\",[t._v(\"这一切的分析数据的能力，都是建立在快速的查询上的，如果没有快速的查询，分析能力无从谈起。\")])])]),t._v(\" \"),a(\"li\",[t._v(\"关系型数据库，把原本非常形象的对象，拍平了，拍成各个字段，存在数据库，查询时，再重新构造出对象；ES则是文档存储，把对象原原本本地放进去，取出时直接取出。\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"Mysql基于B+树索引，来实现快速检索，ES则基于\"),a(\"strong\",[t._v(\"倒排索引\")]),t._v(\"，对于文档搜索来说，倒排索引在性能和空间上都有更加明显的优势。\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"倒排索引\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#倒排索引\"}},[t._v(\"#\")]),t._v(\" 倒排索引\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"普通索引是根据文档找关键字，倒排索引是根据关键字找文档\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"es-对比-solr\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#es-对比-solr\"}},[t._v(\"#\")]),t._v(\" ES 对比 Solr\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"Solr使用ZK进行分布式关联，ES使用自带分布式协调器\")]),t._v(\" \"),a(\"li\",[t._v(\"Solr支持多中数据结构，ES仅支持json格式\")]),t._v(\" \"),a(\"li\",[t._v(\"Solr官方提供功能更多，而ES本身更注重核心功能，高级功能多是第三方提供\")]),t._v(\" \"),a(\"li\",[t._v(\"Solr在传统搜索应用中表现好于ES，但在实时处理搜索应用时效率明显低于ES\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"es核心概念\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#es核心概念\"}},[t._v(\"#\")]),t._v(\" ES核心概念\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"ES是面向文档的，这意味着它可以存储整个对象或文档，然而它不仅是存储，还会索引(index)每个文档内容可以被搜索，在ES中，你可以对文档(而非成行成列的数据)进行缩影、搜索、排序、过滤。ES对比传统数据库如下：\")])]),t._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"TIP\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"Relational DB ->Database->Tables->Rows     ->Columns\")]),t._v(\" \"),a(\"li\",[t._v(\"Elasticsearche->Indexs  ->Types ->Documents->Fields\")])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"索引-index\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#索引-index\"}},[t._v(\"#\")]),t._v(\" 索引 index:\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"一个索引就是一个拥有几分相似特征文档的集合。比如说，你可以有一个客户数据的索引，另一个产品目录的索引，还有一个订单数据的索引。一个索引由一个名字来标识(必须全部小写字母)，并且当我们要对对应这个索引中的文档进行索引、搜索、更新和删除时，都要使用这个名字，在一个集群中，你可以定义多个索引\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"类型-type\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#类型-type\"}},[t._v(\"#\")]),t._v(\" 类型 type:\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"在一个索引中，你可以定义一种或多种类型，一个类型是你的索引的一个逻辑上的分类/分区，其语义完全由你来定，会为具有一组共同字段的文档定义一个类型。比如说，我们假设你运营一个博客平台且将你所有数据存储在一个索引中。在这个索引中，你可以为用户数据定义一个类型，为博客数据定义另一个类型，为评论内容定义一个类型。\")]),t._v(\" \"),a(\"li\",[t._v(\"一个type下的document,都有相同的field\")]),t._v(\" \"),a(\"li\",[t._v(\"ES 7.X以后，Type概念已被删除\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"文档-documents\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#文档-documents\"}},[t._v(\"#\")]),t._v(\" 文档 Documents\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"一个文档是一个可以被索引的基础信息单元.比如你可以拥有某一个客户的文档，某一个产品的文档。文档以json格式来表示。\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"字段-fields\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#字段-fields\"}},[t._v(\"#\")]),t._v(\" 字段 Fields\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"相当于数据库的表字段，对文档数据根据不同属性进行分类标识\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"映射-mapping\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#映射-mapping\"}},[t._v(\"#\")]),t._v(\" 映射 mapping\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"mapping是处理数字的方式和规则方面进行了一些限制，如某个字段的数据类型、默认值、分析器、是否被索引等，这些都是映射里可以设置的，其它都是处理ES里面数据的一些使用规则设置也叫映射，按着最优规则处理数据对性能提高很大，因此才需要建立映射，并且需要思考如何建立映射对性能更好\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"安装es\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#安装es\"}},[t._v(\"#\")]),t._v(\" 安装ES\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"elasticsearch.org\")]),t._v(\"下载对应系统的安装包，进入bin目录执行elasticsearch.bat (windows)\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"http://localhost:9200/\")]),t._v(\"访问是否启动\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"文档管理-crud\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#文档管理-crud\"}},[t._v(\"#\")]),t._v(\" 文档管理(CRUD)\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"索引index-创建\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#索引index-创建\"}},[t._v(\"#\")]),t._v(\" 索引Index-创建\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#创建一个shopping的索引，幂等\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPUT\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"''\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"索引index-查询-删除\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#索引index-查询-删除\"}},[t._v(\"#\")]),t._v(\" 索引Index-查询&删除\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#查询shopping索引\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XGET\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"''\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#查询所有索引信息\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XGET\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/_cat/indices?v\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"''\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#删除索引\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XDELETE\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"''\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"文档doucument-创建post\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#文档doucument-创建post\"}},[t._v(\"#\")]),t._v(\" 文档Doucument-创建Post\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"索引创建完了，添加Documents，新版本没有表的概念了，直接索引后面添加数据\")]),t._v(\" \"),a(\"li\",[t._v(\"_doc就是这个索引的type,也可以写为_create，固定写法\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 文档添加，需要json数据,该操作不幂等\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_doc\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"name\":\"小米4\",\\n\\t\"price\":1999\\n}\\n\\'')]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 自定义ID 1001添加文档\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_doc/1001\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"name\":\"小米4\",\\n\\t\"price\":1999\\n}\\n\\'')]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"主键查询-全查询\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#主键查询-全查询\"}},[t._v(\"#\")]),t._v(\" 主键查询&全查询\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#主键查询\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_doc/1001\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"''\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#全部查询 会查询所有索引\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/_search\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"''\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"全量修改-局部修改-删除\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#全量修改-局部修改-删除\"}},[t._v(\"#\")]),t._v(\" 全量修改&局部修改&删除\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#全量修改，该index下的1001数据修改，幂等\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPUT\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_doc/1001\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"name\":\"小米5\",\\n\\t\"price\":3999\\n}\\n\\'')]),t._v(\"\\n\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#局部修改，该index下的1001数据修改，POST不幂等\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#_update代表局部修改，json数据doc表现对文档修改，name是具体修改的哪一个值\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_update/1001\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"doc\":{\\n\\t  \"name\":\"华为\"\\n\\t}\\n}\\n\\'')]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#删除文档\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XDELETE\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_doc/1001\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"''\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"条件查询-分页查询-查询排序\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#条件查询-分页查询-查询排序\"}},[t._v(\"#\")]),t._v(\" 条件查询&分页查询&查询排序\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#条件查询1\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XGET\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_search?q=name:华为\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"''\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#条件查询2 query代表条件查询，match匹配\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_search\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"query\":{\\n\\t\\t\"match\":{\\n\\t\\t\\t\"name\":\"华为\"\\n\\t\\t}\\n\\t}\\n}\\n\\'')]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#查询全部\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_search\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"query\":{\\n\\t\\t\"match_all\":{\\n\\t\\t}\\n\\t}\\n}\\n\\'')]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#分页查询 from起始页，size每页大小\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_search\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"query\":{\\n\\t\\t\"match_all\":{\\n\\t\\t}\\n\\t},\\n\\t\"from\":0,\\n\\t\"size\":2\\n}\\n\\'')]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#查询排序&查询控制,_source指定想要查询的参数\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_search\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"query\":{\\n\\t\\t\"match_all\":{\\n\\t\\t}\\n\\t},\\n\\t\"from\":0,\\n\\t\"size\":2,\\n  \"_source\":[\"price\"],\\n  \"sort\":{\\n\\t\\t\"price\":{\\n\\t\\t\\t\"order\":\"desc\"\\n\\t\\t}\\n\\t}\\n}\\n\\'')]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"多条件查询-范围查询\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#多条件查询-范围查询\"}},[t._v(\"#\")]),t._v(\" 多条件查询&范围查询\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 多条件查询,must代表多条件都需要匹配，类似SQL的and ,should代表or，可以替换must\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_search\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"query\":{\\n\\t\\t\"bool\":{\\n\\t\\t\\t\"must\":[\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\"match\":{\\n\\t\\t\\t\\t\\t\\t\"name\":\"华为\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\"match\":{\\n\\t\\t\\t\\t\\t\\t\"price\":4999\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t}\\n\\t}\\n}\\n\\'')]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#范围查询 增加filter做范围查询，如果should，match不生效，会查到华为以外的，must只会查名字叫华为且价格大于3000数据\")]),t._v(\"\\n \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"query\"')]),t._v(\":\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"bool\"')]),t._v(\":\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"must\"')]),t._v(\":\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"\\n\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"match\"')]),t._v(\":\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"华为\"')]),t._v(\"\\n\\t\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\",\\n\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"filter\"')]),t._v(\":\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"range\"')]),t._v(\":\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"price\"')]),t._v(\":\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"gt\"')]),t._v(\":3000\\n\\t\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\t\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\t\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\t\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\t\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n'\\n\")])])]),a(\"h4\",{attrs:{id:\"全文检索-完全匹配-高亮查询\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#全文检索-完全匹配-高亮查询\"}},[t._v(\"#\")]),t._v(\" 全文检索&完全匹配&高亮查询\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#全文检索 如果我们匹配了米华，分词会把小米和华为都查出来，\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_search\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"query\":{\\n\\t\\t\"match\":{\\n\\t\\t\\t\"name\":\"米华\"\\n\\t\\t}\\n\\t}\\n}\\n\\'')]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#完全匹配 这样只能搜到名字带华的了，如果写米华匹配不成功\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_search\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"query\":{\\n\\t\\t\"match_phrase\":{\\n\\t\\t\\t\"name\":\"华\"\\n\\t\\t}\\n\\t}\\n}\\n\\'')]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#高亮查询 fields代表要高亮的字段名\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPOST\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/shopping/_search\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"query\":{\\n\\t\\t\"match_phrase\":{\\n\\t\\t\\t\"name\":\"华\"\\n\\t\\t}\\n\\t},\\n\\t\"highlight\":{\\n\\t\\t\"fields\":{\\n\\t\\t\\t\"name\":{}\\n\\t\\t}\\n\\t}\\n}\\n\\'')]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"聚合查询\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#聚合查询\"}},[t._v(\"#\")]),t._v(\" 聚合查询\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\")])]),a(\"h4\",{attrs:{id:\"映射关系\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#映射关系\"}},[t._v(\"#\")]),t._v(\" 映射关系\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 创建一个student的索引 并且设置mapping\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"curl\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-XPUT\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"http://localhost:9200/student/_mapping\"')]),t._v(\" -d\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\\'\\n{\\n\\t\"properties\":{\\n\\t\\t\"name\":{\\n\\t\\t\\t\"type\":\\t\"text\",\\n\\t\\t\\t\"index\":true\\n\\t\\t},\\n\\t\\t\"sex\":{\\n\\t\\t\\t\"type\":\\t\"keyword\",\\n\\t\\t\\t\"index\":true\\n\\t\\t},\\n\\t\\t\"phone\":{\\n\\t\\t\\t\"type\":\\t\"keyword\",\\n\\t\\t\\t\"index\":false\\n\\t\\t}\\n\\t}\\n}\\n\\'')]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# name这个属性是分词的，type类型是text,且为true\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v('# sex这个数据必须完全匹配才能查询，\"type\":\\t\"keyword\"')]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v('# phone这个不能作为查询条件的\\t\"type\":\\t\"keyword\",\"index\":false 不支持查询')]),t._v(\"\\n\")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}