{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{315:function(s,e,a){\"use strict\";a.r(e);var t=a(14),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"dockercompose-服务编排\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dockercompose-服务编排\"}},[s._v(\"#\")]),s._v(\" DockerCompose 服务编排\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"概述\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#概述\"}},[s._v(\"#\")]),s._v(\" 概述\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[s._v(\"使用微服务架构的应用程序一般包含若干个微服务，每个微服务一般都会部署多个实例，如果每个微服务都要手动操作那效率会很低，Docker compose就是用来高效管理容器，提交部署效率。\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"docker-compose 是一个用户定义和运行多个容器的 Docker 应用程序。在 Compose 中你可以使用 .yml 文件来配置你的应用服务。然后，只需要一个简单的命令，就可以创建并启动。\")])])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"docker-compose-管理容器的结构\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#docker-compose-管理容器的结构\"}},[s._v(\"#\")]),s._v(\" Docker Compose 管理容器的结构\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[s._v(\"Docker Compose将所管理的容器分为三层，分别是\"),a(\"strong\",[s._v(\"工程（project）\")]),s._v(\"、\"),a(\"strong\",[s._v(\"服务（service）\")]),s._v(\"、\"),a(\"strong\",[s._v(\"容器（container）\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"Docker Compose运行目录下所有的文件（docker-compose-yml、extends文件或者环境变量文件等）组成一个工程，一个工程可包含多个服务，每个服务中定义了容器运行的镜像，参与以及依赖，一个服务可以包含多个容器实例。\")])])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"docker-compose-yml-常用指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#docker-compose-yml-常用指令\"}},[s._v(\"#\")]),s._v(\" docker-compose.yml 常用指令\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"image\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"指定镜像名称或者镜像id,如果该镜像不存在，会尝试pull\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"build\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"指定Dockerfile文件的路径，可以是一个路径。例如：\")])])])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"build: ./dir\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"也可以是一个对象，用于指定Dockerfile和参数。例如：\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"build: ./dir\\n  context: Dockerfile-alternate\\n  args:\\n      buildno:1\\n\")])])]),a(\"ul\",[a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"command\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"覆盖容器启动后的默认执行命令：\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"command: bundle \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"exec\")]),s._v(\" thin \"),a(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[s._v(\"-p\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3000\")]),s._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"也可以是个list,类似docker的CMD命令\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"command: \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"bundle,exec,thin,-p,3000\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])])])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"links\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"链接到其它服务中的容器，可以指定服务名称和链接的别名使用SERVICE：ALIAS\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"web:\\n  links:\\n      - db\\n      - db:database\\n      - redis\\n\")])])])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"external_links\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"表示链接到docker-compose.yml外的容器。甚至非Compose管理的容器\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"extenrnal_links:\\n  - redis_l\\n  - project_db_1:mysql\\n  - project_db_2:postgresql\\n\")])])])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"ports\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"暴露的端口号，使用 \"),a(\"code\",[s._v(\"宿主机：容器端口\")]),s._v(\" 的格式,或者仅仅指定容器的端口（此时宿主机会随机是指定，类似docker run -P命令）\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"ports:\\n - \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"3000\"')]),s._v(\"\\n - \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"3000-5000\"')]),s._v(\"\\n - \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"8080:8080\"')]),s._v(\"\\n - \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"8000-9000\"')]),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"8000-9000\"')]),s._v(\"\\n - \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"49100:22\"')]),s._v(\"\\n - \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"127.168.0.0.1:8001:8001\"')]),s._v(\"\\n\")])])])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"expose\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"暴露端口，只将端口暴露给连接的服务，而不暴露给宿主机\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"expose: \\n  - \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"3000\"')]),s._v(\"\\n\")])])])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"volumes\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"卷挂载路径的设置。可以设置宿主机路径或加上访问模式\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"volumes:\\n  - /var/lib/mysql\\n  - /opt/data:/var/lib/mysql\\n  - ~/configs:/etc/configs/:ro\\n\")])])])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"volumes_from\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"从另一个服务或者容器挂载卷\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"volumes_from:\\n  - service_name\\n  - servie_name:ro\\n  - container:container_name\\n\")])])])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"environment\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"设置环境变量，可以使用数组或者字典两种方式，只有一个key的环境变量可以运行在compose机器上找到对应的\")])])])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"environment:\\n    RACK_ENV: development\\n    SHOW: \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'true'\")]),s._v(\"\\n    SESSION_SECRET:\\n\")])])]),a(\"ul\",[a(\"li\",[a(\"strong\",[s._v(\"env_file\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"从文件中获取环境变量，可以为单独的文件路径或者列表\")])])])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"env_file:\\n   - ./common.env\\n   - ./apps/web.env\\n   _ /opt/secrets.env\\n\")])])]),a(\"ul\",[a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"extends\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"继承另一个服务，基于已有的服务拓展\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"net\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"设置网络模式\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"net: \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"bridge\"')]),s._v(\"\\nnet: \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"host\"')]),s._v(\"\\nnet: \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"none\"')]),s._v(\"\\nnet: \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"container:[service name or container name/id]\"')]),s._v(\"\\n\")])])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);","extractedComments":[]}