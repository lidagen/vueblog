{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{382:function(a,t,e){\"use strict\";e.r(t);var r=e(14),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[e(\"h2\",{attrs:{id:\"kafka-基础\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#kafka-基础\"}},[a._v(\"#\")]),a._v(\" Kafka 基础\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"Kafka是一个\"),e(\"strong\",[a._v(\"分布式\")]),a._v(\"的基于\"),e(\"strong\",[a._v(\"发布\\\\订阅\")]),a._v(\"的\"),e(\"strong\",[a._v(\"消息队列\")])])]),a._v(\" \"),e(\"h3\",{attrs:{id:\"消息队列\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#消息队列\"}},[a._v(\"#\")]),a._v(\" 消息队列\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"缓冲和削峰：上游数据时有突发流量，下游可能扛不住\")]),a._v(\" \"),e(\"li\",[a._v(\"解耦和扩展性：项目开始的时候，并不能确定具体需求。消息队列可以作为一个接口层\")]),a._v(\" \"),e(\"li\",[a._v(\"冗余：可以采用一对多的方式，一个生产者发布消息，可以被多个订阅topic的服务消费到\")]),a._v(\" \"),e(\"li\",[a._v(\"健壮性：消息队列可以堆积请求，所以消费端业务即使短时间死掉，也不会影响主要业务的正常进行。\")]),a._v(\" \"),e(\"li\",[a._v(\"异步通信：有些数据不需要即时处理。\")])]),a._v(\" \"),e(\"h3\",{attrs:{id:\"消费模式\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#消费模式\"}},[a._v(\"#\")]),a._v(\" 消费模式\")]),a._v(\" \"),e(\"h4\",{attrs:{id:\"_1-1消息队列两种模式\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1消息队列两种模式\"}},[a._v(\"#\")]),a._v(\" 1.1消息队列两种模式\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"点对点模式：消费者拉取数据，消息收到后清除\")]),a._v(\" \"),e(\"li\",[a._v(\"发布/订阅模式：消费者消费数据后不会清除消息（拉模式）\")])]),a._v(\" \"),e(\"h3\",{attrs:{id:\"kafka组件\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#kafka组件\"}},[a._v(\"#\")]),a._v(\" kafka组件\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"Topic ：消息根据Topic进行归类\")]),a._v(\" \"),e(\"li\",[a._v(\"Producer：发送消息者\")]),a._v(\" \"),e(\"li\",[a._v(\"Consumer：消息接受者\")]),a._v(\" \"),e(\"li\",[a._v(\"broker：每个kafka实例(server)\")]),a._v(\" \"),e(\"li\",[a._v(\"Segment：partition物理上由多个segment组成。\")]),a._v(\" \"),e(\"li\",[a._v(\"offset : 每个partition都由一系列有序的、不可变的消息组成，这些消息被连续的追加到partition中。partition中的每个消息都有一个连续递增的序列号叫做offset，偏移量offset在每个分区中是唯一的。\")]),a._v(\" \"),e(\"li\",[a._v(\"replica： partition 的副本，保障 partition 的高可用。\")]),a._v(\" \"),e(\"li\",[a._v(\"follower： replica 中的一个角色，从 leader 中复制（fentch）数据。\")]),a._v(\" \"),e(\"li\",[a._v(\"leader： replica 中的一个角色， producer 和 consumer 只跟 leader 交互。\")]),a._v(\" \"),e(\"li\",[a._v(\"controller：kafka 集群中的其中一个服务器，用来进行 leader election 以及 各种 failover。\")]),a._v(\" \"),e(\"li\",[a._v(\"Zookeeper：依赖集群保存meta信息。\")]),a._v(\" \"),e(\"li\",[a._v(\"Partition：每个 topic 包含一个或多个 partition。kafka 分配的单位是 partition。\")]),a._v(\" \"),e(\"li\",[a._v(\"Consumer group：high-level consumer API 中，每个 consumer 都属于一个 consumer group，每条消息和partition只能被 group 中的一个 Consumer 消费，但可以被多个 consumer group 消费。\")])]),a._v(\" \"),e(\"h3\",{attrs:{id:\"集群配置\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#集群配置\"}},[a._v(\"#\")]),a._v(\" 集群配置\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"kafka命令\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#kafka命令\"}},[a._v(\"#\")]),a._v(\" kafka命令\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-sh extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# bin/kafka-topics.sh\")]),a._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# 查看所有topic\")]),a._v(\"\\nbin/kafka-topics.sh \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--list\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--zookeeper\")]),a._v(\" localhost:2181\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# 创建一个topic ,--topic定义topic名，--replication-factor定义副本数 ，--partitions 定义分区数\")]),a._v(\"\\nbin/kafka-topics.sh \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--create\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--zookeeper\")]),a._v(\" localhost:2181 --replication-factor \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"1\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--partitions\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"1\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--topic\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\"test\")]),a._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# 删除\")]),a._v(\"\\n bin/kafka-topics.sh  \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--delete\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--zookeeper\")]),a._v(\" localhost:2181 \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--topic\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\"test\")]),a._v(\"\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"数据日志分离\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据日志分离\"}},[a._v(\"#\")]),a._v(\" 数据日志分离\")])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}