{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{467:function(s,t,a){\"use strict\";a.r(t);var e=a(42),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"redis高级\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redis高级\"}},[s._v(\"#\")]),s._v(\" Redis高级\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"linux-操作redis\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#linux-操作redis\"}},[s._v(\"#\")]),s._v(\" linux 操作redis\")]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_1安装\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1安装\"}},[s._v(\"#\")]),s._v(\" 1安装\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#下载解压tar.gz包\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"wget\")]),s._v(\" http://download.redis.io/releases/redis-5.0.7.tar.gz\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#进入解压的包\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"cd\")]),s._v(\" ./redis-5.0.7\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#编译\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"make\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#安装\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"make\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"install\")]),s._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"_2-指定端口启动\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-指定端口启动\"}},[s._v(\"#\")]),s._v(\" 2.指定端口启动\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"redis-server --prot \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6379\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#关闭redis\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#查进程,找PID号杀掉\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"ps\")]),s._v(\" -ef \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"grep\")]),s._v(\" redis-\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"kill\")]),s._v(\" -s \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"9\")]),s._v(\" pid号\\n\")])])]),a(\"h4\",{attrs:{id:\"_3-配置文件启动\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-配置文件启动\"}},[s._v(\"#\")]),s._v(\" 3.配置文件启动\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#修改目录下的redis.conf,启动\")]),s._v(\"\\nredis-server redis.conf\\n\")])])]),a(\"h3\",{attrs:{id:\"持久化\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#持久化\"}},[s._v(\"#\")]),s._v(\" 持久化\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"持久化：利用永久存储介质进行保存，在特定时间将保存的数据进行恢复的机制。\")]),s._v(\" \"),a(\"li\",[s._v(\"持久化是防止意外丢失，确保数据安全\")]),s._v(\" \"),a(\"li\",[s._v(\"持久化过程工作方式：\\n\"),a(\"ul\",[a(\"li\",[s._v(\"数据（快照）：将当前的数据状态进行保存，存储数据结果，关注点在数据。（RDB）\")]),s._v(\" \"),a(\"li\",[s._v(\"过程（日志）：将数据的操作步骤记录，存储操作过程，关注点在数据操作的过程。（AOF）\")])])])]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_1-rdb\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-rdb\"}},[s._v(\"#\")]),s._v(\" 1.RDB\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"RDB启动方式---save指令\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#手动执行一次保存操作，保存位置在redis.conf配置的dir目录下dump.rdb文件\")]),s._v(\"\\nsave\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"RDB相关配置\"),a(\"code\",[s._v(\"redis.conf\")])])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设置本地保存快照名称，默认值是dump.rdb，可改为dump_端口号.rdb\")]),s._v(\"\\ndbfilename dump.rdb\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#存储rdb的路径\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"dir\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"/opt/redisData\"')]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#本地存储是否压缩数据，默认yes,如果设置为no,可节省CPU时间，但文件会变大巨大\")]),s._v(\"\\nrdbcompression \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设置是如rdb文件格式校验，默认yes,如果设置no，可节约读写10%时间消耗，但存储数据有损坏风险\")]),s._v(\"\\nrdbchecksum \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#后台bgsave存储出错是否停止保存，默认yes\")]),s._v(\"\\nstop-writes-on-bgsave-error \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#配置RDB自动保存，叫save后台是bgsave指令\")]),s._v(\"\\nsave \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"300\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"50\")]),s._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"save指令工作原理\\n\"),a(\"ul\",[a(\"li\",[s._v(\"因为redis是单线程的，save指令保存数据会耗时，有可能导致长时间阻塞。线上环境不建议使用\")])])]),s._v(\" \"),a(\"li\",[s._v(\"bgsave指令\\n\"),a(\"ul\",[a(\"li\",[s._v(\"basave命令后，其不是立刻执行，而是会调用fork函数生成子进程保存数据，不占用redis线程。\")])])])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#后台保存\")]),s._v(\"\\nbgsave\\n\")])])]),a(\"ul\",[a(\"li\",[a(\"p\",[a(\"strong\",[s._v(\"bgsave是针对save的优化，Redis涉及RDB的操作都用bgsave代替save指令\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"bgsave自动执行\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"配置：\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#second 监控时间 changes 监控key的变化量\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 在10秒内监控到了10个key发生了变化就保存\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 在redis.conf中配置\")]),s._v(\"\\nsave second changes\\n\")])])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"注意：\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"save配置要根据实际业务设定，频度过高或者过低都可能出现性能问题\")]),s._v(\" \"),a(\"li\",[s._v(\"save配置中second和changes设置通常互补对应关系，尽量不要设置成包含性的关系\")]),s._v(\" \"),a(\"li\",[s._v(\"save配置后是bgsave指令操作\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"rdb特殊启动形式\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"全量复制\")]),s._v(\" \"),a(\"li\",[s._v(\"服务器运行过程中重启\")])])])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"debug reload\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"关闭服务器时指定保存数据\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"shutdown\")]),s._v(\" save\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"RDB优点\\n\"),a(\"ul\",[a(\"li\",[s._v(\"RDB是一个紧凑的二进制文件，存储效率高\")]),s._v(\" \"),a(\"li\",[s._v(\"RDB内部存储的是redis在某个时间点的数据快照，非常适用数据备份，全量复制\")]),s._v(\" \"),a(\"li\",[s._v(\"RDB恢复数据速度比AOF快\")]),s._v(\" \"),a(\"li\",[s._v(\"应用：服务器中每隔N小时执行bgsave备份，并将RDB文件拷贝到远程机器中，用于灾难恢复\")])])]),s._v(\" \"),a(\"li\",[s._v(\"RDB缺点\\n\"),a(\"ul\",[a(\"li\",[s._v(\"RDB无论执行指令还是利用配置，都无法做到实时持久化，有较大可能丢失部分数据\")]),s._v(\" \"),a(\"li\",[s._v(\"bgsave指令每次运行需要fork子进程，要牺牲一些性能\")]),s._v(\" \"),a(\"li\",[s._v(\"Redis众多版本未就RDB文件格式统一，不同版本可能无法兼容\")])])])]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_2-aof\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-aof\"}},[s._v(\"#\")]),s._v(\" 2.AOF\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"append only file:以独立日志的方式记录每次命令，重启后再次执行AOF文件中的命令达到恢复数据的目的。\")]),s._v(\" \"),a(\"li\",[s._v(\"aof解决了数据持久化和实时性，是redis持久化的主流方式\")]),s._v(\" \"),a(\"li\",[s._v(\"aof持久化的三种策略（appendfsync）\\n\"),a(\"ul\",[a(\"li\",[s._v(\"always(每次): 每次写入都同步到aof文件中，数据零误差，\"),a(\"strong\",[s._v(\"性能较低\")])]),s._v(\" \"),a(\"li\",[s._v(\"everysec(每秒)：每秒将缓存区的数据同步到aof文件中，数据准确率较高，性能较高，最多丢失1秒内的数据\")]),s._v(\" \"),a(\"li\",[s._v(\"no (系统控制)：由操作系统控制每次aof的周期，\"),a(\"strong\",[s._v(\"时间不可控\")])])])]),s._v(\" \"),a(\"li\",[s._v(\"aof开启\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#conf文件中配置，dir中生成aof文件\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#是否开启aof，默认no\")]),s._v(\"\\nappendonly \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\"no\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#策略\")]),s._v(\"\\nappendfsync always\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\"everysec\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\"no\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#文件名\")]),s._v(\"\\nappendfilename appendonly_端口号.aof\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"AOF重写\\n\"),a(\"ul\",[a(\"li\",[s._v(\"随着命令越来越多，文件会越来越大，为了解决这个问题，Redis引入了aof重写机制，简单来说就是对同一个数据若干条指令转化成的最终结果进行对于指令记录\")]),s._v(\" \"),a(\"li\",[s._v(\"重写好处：1.降低磁盘占用量；2.降低持久化时间，减少IO；3.数据恢复效率变高\")]),s._v(\" \"),a(\"li\",[s._v(\"重写方式\")])])])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#手动重写\")]),s._v(\"\\nbgrewriteaof\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#conf配置\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设置允许重写的最小aof文件大小，避免了达到约定百分比但尺寸仍然很小的情况还要重写\")]),s._v(\"\\nauto-aof-rewrite-min-size 64mb\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#aof自动重写配置。当目前aof文件大小超过上一次重写的aof文件大小的百分之多少进行重写\")]),s._v(\"\\nauto-aof-rewrite-percentage \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),s._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"_3-rdb和aof的区别\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-rdb和aof的区别\"}},[s._v(\"#\")]),s._v(\" 3.RDB和AOF的区别\")]),s._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[s._v(\"持久化方式\")]),s._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"RDB\")]),s._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"AOF\")])])]),s._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[s._v(\"占用存储空间\")]),s._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"java\")]),s._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"AP\")])]),s._v(\" \"),a(\"tr\",[a(\"td\",[s._v(\"存储速度\")]),s._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"小（数据级：压缩）\")]),s._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"大 （指令级：重写）\")])]),s._v(\" \"),a(\"tr\",[a(\"td\",[s._v(\"恢复速度\")]),s._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"快\")]),s._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"慢\")])]),s._v(\" \"),a(\"tr\",[a(\"td\",[s._v(\"数据安全性\")]),s._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"会丢失数据\")]),s._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"依据策略决定\")])]),s._v(\" \"),a(\"tr\",[a(\"td\",[s._v(\"资源消耗\")]),s._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"高/重量级\")]),s._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"低/轻量级\")])]),s._v(\" \"),a(\"tr\",[a(\"td\",[s._v(\"启动优先级\")]),s._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"低\")]),s._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[s._v(\"高\")])])])]),s._v(\" \"),a(\"h5\",{attrs:{id:\"_4-rdb和aof选择\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-rdb和aof选择\"}},[s._v(\"#\")]),s._v(\" 4.RDB和AOF选择\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[s._v(\"数据十分敏感，选AOF\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"策略为everysec,最多丢失1秒内数据\")]),s._v(\" \"),a(\"li\",[s._v(\"注意：AOF文件存储较大，恢复较慢\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"数据呈现阶段有效性，选RDB\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"数据可以良好做到阶段内无丢失，且恢复较快\")]),s._v(\" \"),a(\"li\",[s._v(\"注意:利用RDB实现紧凑数据持久化会使redis降的很低\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"综合对比\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"AOF适用数据敏感业务\")]),s._v(\" \"),a(\"li\",[s._v(\"如能承受数分钟内丢失，且追求大数据恢复速度，选RDB\")]),s._v(\" \"),a(\"li\",[s._v(\"容灾恢复选RDB\")]),s._v(\" \"),a(\"li\",[s._v(\"双保险策略，都开启，重启后Redis优先使用AOF恢复\")])])])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"事务\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#事务\"}},[s._v(\"#\")]),s._v(\" 事务\")]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_1-事务简介\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-事务简介\"}},[s._v(\"#\")]),s._v(\" 1.事务简介\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"redis的一系列操作，中间不被打断\")])]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_2-事务基本操作\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-事务基本操作\"}},[s._v(\"#\")]),s._v(\" 2.事务基本操作\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#开启事务,事务开启的位置，在这个命令后续的指令都在一个事务内\")]),s._v(\"\\nmulti\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#执行事务，设定的结束事务位置\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"exec\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 两个命令成对出现，设定了事务的开始和结束区间\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#取消事务命令,发生在exec之前，multi之后\")]),s._v(\"\\ndiscard\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"注意：当我们加入事务命令的时候，命令加入任务队列中并未执行，只有执行了exec才真正执行\")]),s._v(\" \"),a(\"li\",[a(\"code\",[s._v(\"multi\")]),s._v(\"命令开启后，redis会创建一个队列，对之后的指令都放入队列中，在识别到\"),a(\"code\",[s._v(\"exec\")]),s._v(\"指令后，在依次执行队列里的指令\")]),s._v(\" \"),a(\"li\",[s._v(\"事务注意事项：\\n\"),a(\"ul\",[a(\"li\",[a(\"code\",[s._v(\"multi\")]),s._v(\"开启后，后续指令出错（比如set写成est），则事务全不执行，事务取消，无法执行\"),a(\"code\",[s._v(\"exec\")])]),s._v(\" \"),a(\"li\",[a(\"code\",[s._v(\"multi\")]),s._v(\"开启后,对输入操作了不符合其数据结构的指令，比如对string用了lpush,则这行指令出错，其余正确执行。这种需要程序员自己回滚事务。\")])])])]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_3-锁\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-锁\"}},[s._v(\"#\")]),s._v(\" 3.锁\")]),s._v(\" \"),a(\"h5\",{attrs:{id:\"watch\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#watch\"}},[s._v(\"#\")]),s._v(\" watch\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"一笔数据需要进行进行修改，这时几个客户端都有权限修改，为了保证不重复操作，需要锁来监控这个key是否发生了变化，如果变化则后续操作不发生。\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#对key进行监控，如果事务执行exec前key有了改动，则终止执行事务\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"watch\")]),s._v(\" key1 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"key2\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#取消对所有key监控\")]),s._v(\"\\nunwatch\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"监控在\"),a(\"code\",[s._v(\"multi\")]),s._v(\"之前，在\"),a(\"code\",[s._v(\"exec\")]),s._v(\"执行前，key的值发生变化，则\"),a(\"code\",[s._v(\"exec\")]),s._v(\"不执行\")])]),s._v(\" \"),a(\"h5\",{attrs:{id:\"分布式锁\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分布式锁\"}},[s._v(\"#\")]),s._v(\" 分布式锁\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"多个人抢购一个物品，如何避免这件商品不被多个人抢到？\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#使用setnx设置一个公共锁\")]),s._v(\"\\nsetnx lock_key value\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#利用setnx返回值特征，有值则返回失败，无值则返回成功\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#抢购前，设置锁，成功则进入修改数据并删除锁，失败则等待\")]),s._v(\"\\n\")])])]),a(\"h5\",{attrs:{id:\"死锁\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#死锁\"}},[s._v(\"#\")]),s._v(\" 死锁\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"如果某个客户端加锁以后，客户端宕机无法执行之后步骤，或者忘记解锁，如何解决？\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#给锁设置一个时效，到期自动解锁\")]),s._v(\"\\nexpire key second\\npexpire key millisenconds\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"由于redis操作通常都是毫秒级，因此锁定时间不宜过大，具体需要业务测试后确定\\n\"),a(\"ul\",[a(\"li\",[s._v(\"测试百万次最长执行时间对应命令的最大耗时，测试百万次网络延迟平均耗时\")]),s._v(\" \"),a(\"li\",[s._v(\"锁时间推荐：最大耗时 * 1.2+平均网络耗时 * 1.1\")])])])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"删除策略\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#删除策略\"}},[s._v(\"#\")]),s._v(\" 删除策略\")]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_1-过期数据\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-过期数据\"}},[s._v(\"#\")]),s._v(\" 1.过期数据\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"redis所有数据放在内存中，内存中可以用TTL指令获取其状态\\n\"),a(\"ul\",[a(\"li\",[s._v(\"XX：具有时效性数据\")]),s._v(\" \"),a(\"li\",[s._v(\"-1：永久有效数据\")]),s._v(\" \"),a(\"li\",[s._v(\"-2：已经过期的、被删除或为定义的的数据\")])])])]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_2-数据删除策略\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-数据删除策略\"}},[s._v(\"#\")]),s._v(\" 2.数据删除策略\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[s._v(\"过期的数据并不一定立刻被删除了，redis有三种删除策略：\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[s._v(\"定时删除：创建一个定时器，当key设定了时间，且过期时间到达时，由定时任务执行删除\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"优点：节约内存，到时就删除，快速释放不必要的内存占用\")]),s._v(\" \"),a(\"li\",[s._v(\"缺点：CPU压力很大，无论CPU此时负载多高，均占用CPU，会影响redis服务器响应时间和指令吞吐量。\")]),s._v(\" \"),a(\"li\",[s._v(\"总结：用处理器性能换取存储时间（时间换空间）\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"惰性删除：数据到了过期时间，不做处理，等下次访问该数据时，如果过期就删除\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"优点：节约CPU性能，发现必须删除时再删除\")]),s._v(\" \"),a(\"li\",[s._v(\"缺点：内存占用压力大，出现长期占用内存的数据\")]),s._v(\" \"),a(\"li\",[s._v(\"总结：用存储空间换取处理器性能\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"定期删除：执行器在0-15个分区循环检查，在每个分区随机检查W个key,如果有失效的删除，当本次检查失效的key数量大于W * 25%,则继续这个过程，如果小于W * 25%，则检查下个分区\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"conf中，w的取值= ACTIVE_EXPIRE_CYCLE_LOOKUPS_PRE_LOOP属性值\")]),s._v(\" \"),a(\"li\",[s._v(\"周期性轮询来检查redis中key的时效性，利用过期key占比方式控制删除频率\")]),s._v(\" \"),a(\"li\",[s._v(\"特点1：CPU性能占用设置有峰值，检测频度可设置\")]),s._v(\" \"),a(\"li\",[s._v(\"特点2：内存压力不会很大，长期占用的冷数据会被持续清理\")]),s._v(\" \"),a(\"li\",[s._v(\"总结：周期性抽查存储空间（随机检查，重点抽查）\")])])])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"redis内部时效性数据处理方法：\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"当带有时效的指令设置key后，redis在内存开辟一块空间，里面存储这个数据的\"),a(\"em\",[s._v(\"地址->过期的时间\")]),s._v(\"。\")]),s._v(\" \"),a(\"li\",[s._v(\"数据删除的目标是在内存占用和CPU占用中找平衡，避免redis性能下降甚至宕机。\")]),s._v(\" \"),a(\"li\",[s._v(\"删除的时候，会找已经时效的时间，根据时间能找到对应的数据位置，执行删除。\")])])])]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_3-逐出算法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-逐出算法\"}},[s._v(\"#\")]),s._v(\" 3.逐出算法\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"当新数据进入redis中，如果内存不足。这时候需要逐出算法\")]),s._v(\" \"),a(\"li\",[s._v(\"影响数据逐出的相关配置\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#最大可使用内存,默认0，表示不限制，生产中根据需求来设定，通常设定50%以上\")]),s._v(\"\\nmaxmemory\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#每次选取待删除的个数\")]),s._v(\"\\nmaxmemory-sampes\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#删除策略配置\")]),s._v(\"\\nmaxmemory-policy\\n\")])])]),a(\"h5\",{attrs:{id:\"影响数据逐出的相关配置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#影响数据逐出的相关配置\"}},[s._v(\"#\")]),s._v(\" 影响数据逐出的相关配置\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[s._v(\"检测易失数据（可能会过期的数据集server.bd[i].expire）\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"volatile-lru:挑选最少使用的数据淘汰\")]),s._v(\" \"),a(\"li\",[s._v(\"volatile-lfu:挑选最近使用次数最少的淘汰\")]),s._v(\" \"),a(\"li\",[s._v(\"volatile-ttl:挑选即将失效的淘汰\")]),s._v(\" \"),a(\"li\",[s._v(\"volatile-random:随机选择数据淘汰\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"检测全库数据（所有数据集server.db[i].dict)\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"allkeys-lru:挑选最少使用的数据淘汰\")]),s._v(\" \"),a(\"li\",[s._v(\"allkeys-lfu:挑选最近使用次数最少的淘汰\")]),s._v(\" \"),a(\"li\",[s._v(\"allkeys-random:随机选择数据淘汰\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"放弃数据逐出\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"no-enviction:禁止驱逐,(4.0默认策略)，会引发错误OOM\")])])])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"redis-conf\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redis-conf\"}},[s._v(\"#\")]),s._v(\" redis.conf\")]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_1-redis核心配置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-redis核心配置\"}},[s._v(\"#\")]),s._v(\" 1.redis核心配置\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#基础配置#\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设置redis以守护线程方式启动\")]),s._v(\"\\ndaemonize \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\"no\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#绑定主机地址\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[s._v(\"bind\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"127.0\")]),s._v(\".0.1\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设置端口号\")]),s._v(\"\\nport \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6379\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设置数据库数量\")]),s._v(\"\\ndatabases \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"16\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#日志配置#\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设置服务器日志级别,默认verbose，生产notice即可，减少IO\")]),s._v(\"\\nloglevel debug\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\"verbose\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\"notice\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"|\")]),s._v(\"warning\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#日志记录名\")]),s._v(\"\\nlogfile 端口号.log\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#客户端配置#\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设置同一时间客户端最大连接数量，默认无限制，当客户端连接达到上限，redis会关闭新连接\")]),s._v(\"\\nmaxclients \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#客户端闲置等待最大时长，达到最大时长关闭连接，如需关闭此功能，设置为0\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"timeout\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"300\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#多服务器快捷配置#\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#导入并加载指定配置文件信息，用于快捷创建redis公共配置较多的redis实例配置文件，便于维护\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#类似继承，公共的写一个，然后特别的配置用include\")]),s._v(\"\\ninclude /path/server-端口号.conf\\n\")])])]),a(\"h3\",{attrs:{id:\"redis高级数据类型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redis高级数据类型\"}},[s._v(\"#\")]),s._v(\" redis高级数据类型\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"所谓高级数据类型是为了解决单一问题存在的，它不同于前面5种有明显模型特征的基础类型\")])]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_1-bitmaps\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-bitmaps\"}},[s._v(\"#\")]),s._v(\" 1.Bitmaps\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"业务场景：视频网站需要统计一整年未被观看过的视频，并对其下架，redis如何统计这些数据？\")]),s._v(\" \"),a(\"li\",[s._v(\"方案：这个统计只区分是否，开关式的状态。Bitmaps提供一种二进制方案，二进制每一列代表一部电影，1表示播放过，0表示未播放，这样就最小力度可以保存大量数据\")]),s._v(\" \"),a(\"li\",[s._v(\"这样的方案保存很方便，但是取值比较麻烦，需要根据位置来取，改值也是。拿时间换空间\")]),s._v(\" \"),a(\"li\",[s._v(\"简单理解Bitmaps就是对字符串的二进制操作\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#基本操作#\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设定指定key对应偏移量上的bit值，value只能是0和1\")]),s._v(\"\\nsetbit key offset value\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取指定值偏移量上的值\")]),s._v(\"\\ngetbit key offset\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#注意，如果没设置也会getbit 为0，只要不存在全部是0\")]),s._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"扩展业务：1.统计每天某一部电影是否被点播 2.统计每天多少部电影被点播 3.统计每周/月/年多少部电影被点播4.统计年哪部没被点播\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#统计指定key中1的数量\")]),s._v(\"\\nbitcount key \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"start end\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#start end没有默认全部\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 对指定key按位op进行交and、并or、非not、异或xor操作，并将结果保存destkey中\")]),s._v(\"\\nbitop \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"op\")]),s._v(\" destkey key1 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"key2\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"业务的redis解决方案\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#假如我们有10部电影，电影在数据库的id就来确定他们的offset位置\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#按每一天设定一个key,对点击的电影进行值的修改\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#我们设定10部电影分别id 1-10,4.1日id为1、3、5的点击过\")]),s._v(\"\\nsetbit \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20200401\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\nsetbit \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20200401\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\nsetbit \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20200401\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#4.2日 id为2、3、5被点击过\")]),s._v(\"\\nsetbit \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20200402\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\nsetbit \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20200402\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\nsetbit \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20200402\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#统计总共被点击过的电影数量\")]),s._v(\"\\nbitcount \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20200401\")]),s._v(\"\\nbitcount \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20200402\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 统计两天被点击过的电影存如key为01-02中\")]),s._v(\"\\nbitop or 01-02 \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20200401\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20200402\")]),s._v(\" \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 现在分别查1-10位置的值\")]),s._v(\"\\ngetbit 01-02 \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"Bitmap只能统计是否被播放，不能统计某部电影被播放过多少次\")])]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_2-hyperloglog\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-hyperloglog\"}},[s._v(\"#\")]),s._v(\" 2.HyperLogLog\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"HyperLogLog只干一件事，统计不重复数据的数量\")]),s._v(\" \"),a(\"li\",[s._v(\"基数：\\n\"),a(\"ul\",[a(\"li\",[s._v(\"基数就是数据集去重后元素个数\")]),s._v(\" \"),a(\"li\",[s._v(\"HyperLogLog就是用来作基数统计的，运用了LogLog算法\")])])])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#添加数据\")]),s._v(\"\\npfadd key element \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"element\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#统计数据\")]),s._v(\"\\npfcount key \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"key\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#合并数据\")]),s._v(\"\\npfmerge distkey sourcekey \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"sourcekey\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[s._v(\"只用于基数统计，不保存数据\")]),s._v(\" \"),a(\"li\",[s._v(\"核心是估算算法，最终值存在一定误差\")]),s._v(\" \"),a(\"li\",[s._v(\"误差范围：基数估计的结果存在一个带有0.81%标准错误的近似值\")]),s._v(\" \"),a(\"li\",[s._v(\"耗空间极小，占用12k内存\")])]),s._v(\" \"),a(\"h4\",{attrs:{id:\"_3-geo\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-geo\"}},[s._v(\"#\")]),s._v(\" 3.GEO\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"基于坐标点，来做地理位置的相关操作\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-sh extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#求距离#\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#添加坐标点lng经度lat纬度member是名称，如果两点需要计算，他们要放在一个key里\")]),s._v(\"\\ngeoadd key lng lat member \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"lng lat member\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取坐标点\")]),s._v(\"\\ngeopos key member \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"member\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#计算坐标间距离 unit是单位 可选m  km等\")]),s._v(\"\\ngeodist key member1 menber2 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"unit\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#求范围#\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#根据坐标求范围内数据 radius数字 后面加单位 m km\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# withcoord 返回坐标  #withdist返回距离多远 # count范围 #加asc desc升降序\")]),s._v(\"\\ngeoradius key lng lat radius m\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"\\\\\")]),s._v(\"km\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"\\\\\")]),s._v(\"ft\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"\\\\\")]),s._v(\"mi  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"withcoord\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"withdist\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"withhash\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"count count\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#根据点求范围内数据\")]),s._v(\"\\ngeoradiusbymember key member radius m\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"\\\\\")]),s._v(\"km\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"\\\\\")]),s._v(\"ft\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"\\\\\")]),s._v(\"mi  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"withcoord\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"withdist\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"withhash\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"count count\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#获取指定坐标hash值\")]),s._v(\"\\ngeohash key member \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"menber\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"..\")]),s._v(\".\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#附近10km内10个人升序排列，并显示距离我多远#geos为保存所有人坐标的key\")]),s._v(\"\\ngeoradius geos  \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"108\")]),s._v(\".xxx \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"34\")]),s._v(\".xxx \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),s._v(\" km withdist \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),s._v(\" asc\\n\")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);","extractedComments":[]}